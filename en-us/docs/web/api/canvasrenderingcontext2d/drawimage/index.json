{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CanvasRenderingContext2D.drawImage()","mdn_url":"/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/canvas\"><code>canvas</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/currentTransform\"><code>currentTransform</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/direction\"><code>direction</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle\"><code>fillStyle</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/filter\"><code>filter</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/font\"><code>font</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha\"><code>globalAlpha</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\"><code>globalCompositeOperation</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\"><code>imageSmoothingEnabled</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality\"><code>imageSmoothingQuality</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\"><code>lineCap</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset\"><code>lineDashOffset</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\"><code>lineJoin</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth\"><code>lineWidth</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/miterLimit\"><code>miterLimit</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowBlur\"><code>shadowBlur</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowColor\"><code>shadowColor</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX\"><code>shadowOffsetX</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY\"><code>shadowOffsetY</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle\"><code>strokeStyle</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign\"><code>textAlign</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/textBaseline\"><code>textBaseline</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/arc\"><code>arc()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo\"><code>arcTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath\"><code>beginPath()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo\"><code>bezierCurveTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect\"><code>clearRect()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/clip\"><code>clip()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/closePath\"><code>closePath()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createConicGradient\"><code>createConicGradient()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createImageData\"><code>createImageData()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\"><code>createLinearGradient()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createPattern\"><code>createPattern()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\"><code>createRadialGradient()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded\"><code>drawFocusIfNeeded()</code></a></li><li><em><code>drawImage()</code></em></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawWidgetAsOnScreen\"><code>drawWidgetAsOnScreen()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawWindow\"><code>drawWindow()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/ellipse\"><code>ellipse()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fill\"><code>fill()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect\"><code>fillRect()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/fillText\"><code>fillText()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getContextAttributes\"><code>getContextAttributes()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData\"><code>getImageData()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getLineDash\"><code>getLineDash()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/getTransform\"><code>getTransform()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInPath\"><code>isPointInPath()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInStroke\"><code>isPointInStroke()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo\"><code>lineTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/measureText\"><code>measureText()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo\"><code>moveTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData\"><code>putImageData()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo\"><code>quadraticCurveTo()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/rect\"><code>rect()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/resetTransform\"><code>resetTransform()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/restore\"><code>restore()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/rotate\"><code>rotate()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/save\"><code>save()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/scale\"><code>scale()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/scrollPathIntoView\"><code>scrollPathIntoView()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash\"><code>setLineDash()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform\"><code>setTransform()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/stroke\"><code>stroke()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect\"><code>strokeRect()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/strokeText\"><code>strokeText()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/transform\"><code>transform()</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D/translate\"><code>translate()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>CanvasRenderingContext2D.drawImage()</code></strong> method of the\n  Canvas 2D API provides different ways to draw an image onto the canvas.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">void</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">,</span> dWidth<span class=\"token punctuation\">,</span> dHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> sx<span class=\"token punctuation\">,</span> sy<span class=\"token punctuation\">,</span> sWidth<span class=\"token punctuation\">,</span> sHeight<span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">,</span> dWidth<span class=\"token punctuation\">,</span> dHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>\n  <img src=\"/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage/canvas_drawimage.jpg\" alt=\"drawImage\" width=\"300\" height=\"290\" loading=\"lazy\">\n</p>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"image\"><code>image</code></dt>\n  <dd>\n    <p>\n      An element to draw into the context. The specification permits any canvas image\n      source (<a href=\"/en-US/docs/Web/API/CanvasImageSource\"><code>CanvasImageSource</code></a>), specifically, a\n      <a href=\"/en-US/docs/Web/API/CSSImageValue\"><code>CSSImageValue</code></a>, an <a href=\"/en-US/docs/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a>, an\n      <a href=\"/en-US/docs/Web/API/SVGImageElement\"><code>SVGImageElement</code></a>, an <a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>, an\n      <a href=\"/en-US/docs/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>, an <a href=\"/en-US/docs/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>, or an\n      <a href=\"/en-US/docs/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a>.\n    </p>\n  </dd>\n  <dt id=\"sx\"><code>sx</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      The x-axis coordinate of the top left corner of the sub-rectangle of the source\n      <code>image</code> to draw into the destination context. Use the 3- or 5-argument syntax\n      to omit this argument.\n    </p>\n  </dd>\n  <dt id=\"sy\"><code>sy</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      The y-axis coordinate of the top left corner of the sub-rectangle of the source\n      <code>image</code> to draw into the destination context. Use the 3- or 5-argument syntax\n      to omit this argument.\n    </p>\n  </dd>\n  <dt id=\"swidth\"><code>sWidth</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      The width of the sub-rectangle of the source <code>image</code> to draw into the\n      destination context. If not specified, the entire rectangle from the coordinates\n      specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the\n      image is used. Use the 3- or 5-argument syntax to omit this argument.\n    </p>\n  </dd>\n  <dt id=\"sheight\"><code>sHeight</code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      The height of the sub-rectangle of the source <code>image</code> to draw into the\n      destination context. Use the 3- or 5-argument syntax to omit this argument.\n    </p>\n  </dd>\n  <dt id=\"dx\"><code>dx</code></dt>\n  <dd>\n    <p>\n      The x-axis coordinate in the destination canvas at which to place the top-left\n      corner of the source <code>image</code>.\n    </p>\n  </dd>\n  <dt id=\"dy\"><code>dy</code></dt>\n  <dd>\n    <p>\n      The y-axis coordinate in the destination canvas at which to place the top-left\n      corner of the source <code>image</code>.\n    </p>\n  </dd>\n  <dt id=\"dwidth\"><code>dWidth</code></dt>\n  <dd>\n    <p>\n      The width to draw the <code>image</code> in the destination canvas. This allows\n      scaling of the drawn image. If not specified, the image is not scaled in width when\n      drawn. Note that this argument is not included in the 3-argument syntax.\n    </p>\n  </dd>\n  <dt id=\"dheight\"><code>dHeight</code></dt>\n  <dd>\n    <p>\n      The height to draw the <code>image</code> in the destination canvas. This allows\n      scaling of the drawn image. If not specified, the image is not scaled in height when\n      drawn. Note that this argument is not included in the 3-argument syntax.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"invalidstateerror\"><code>InvalidStateError</code></dt>\n  <dd>\n    <p>Thrown if the image has no image data or if the canvas or source rectangle width or height is zero.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"drawing_an_image_to_the_canvas","title":"Drawing an image to the canvas","isH3":true,"content":"<p>This example draws an image to the canvas using the <code>drawImage()</code> method.</p>\n<h4 id=\"html\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>source<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>rhino.jpg<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>227<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript\">JavaScript</h4>\n<p>\n  The source image is taken from the coordinates (33, 71), with a width of 104 and a\n  height of 124. It is drawn to the canvas at (21, 20), where it is given a width of 87\n  and a height of 104.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'source'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nimage<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'load'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h4 id=\"result\">Result</h4><iframe class=\"sample-code-frame\" title=\"Drawing an image to the canvas sample\" id=\"frame_drawing_an_image_to_the_canvas\" width=\"700\" height=\"180\" src=\"http://localhost:5042/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage/_sample_.drawing_an_image_to_the_canvas.html\" loading=\"lazy\"></iframe>"}},{"type":"prose","value":{"id":"understanding_source_element_size","title":"Understanding source element size","isH3":true,"content":"<p>The <code>drawImage()</code> method uses the source element's <em>intrinsic size in CSS\npixels</em> when drawing.</p>\n<p>\n  For example, if you load an <code>Image</code> and specify the optional size parameters\n  in its <a href=\"/en-US/docs/Web/API/HTMLImageElement/Image\">constructor</a>, you will\n  have to use the <code>naturalWidth</code> and <code>naturalHeight</code> properties of\n  the created instance to properly calculate things like crop and scale regions, rather\n  than <code>element.width</code> and <code>element.height</code>. The same goes for\n  <code>videoWidth</code> and <code>videoHeight</code> if the element is a\n  <a href=\"/en-US/docs/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element, and so on.\n</p>\n<h4 id=\"html_2\">HTML</h4>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>canvas<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<h4 id=\"javascript_2\">JavaScript</h4>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Using optional size for image</span>\nimage<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> drawImageActualSize<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Draw when image has loaded</span>\n\n<span class=\"token comment\">// Load an image of intrinsic size 300x227 in CSS pixels</span>\nimage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'rhino.jpg'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">drawImageActualSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Use the intrinsic size of image in CSS pixels for the canvas element</span>\n  canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>naturalWidth<span class=\"token punctuation\">;</span>\n  canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>naturalHeight<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Will draw the image as 300x227, ignoring the custom size of 60x45</span>\n  <span class=\"token comment\">// given in the constructor</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// To use the custom size we'll have to specify the scale parameters</span>\n  <span class=\"token comment\">// using the element's width and height properties - lets draw one</span>\n  <span class=\"token comment\">// on top in the corner:</span>\n  ctx<span class=\"token punctuation\">.</span><span class=\"token function\">drawImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h4 id=\"result_2\">Result</h4><iframe class=\"sample-code-frame\" title=\"Understanding source element size sample\" id=\"frame_understanding_source_element_size\" width=\"700\" height=\"260\" src=\"http://localhost:5042/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage/_sample_.understanding_source_element_size.html\" loading=\"lazy\"></iframe>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-drawimage-dev","title":"HTML Standard"}],"query":"api.CanvasRenderingContext2D.drawImage"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CanvasRenderingContext2D.drawImage","dataURL":"/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage/bcd.json"}},{"type":"prose","value":{"id":"gecko-specific_notes","title":"Gecko-specific notes","isH3":true,"content":"<ul>\n  <li>\n    Support for flipping the image by using negative values for <code>sw</code> and\n    <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2).\n  </li>\n  <li>\n    Starting with (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), <code>drawImage()</code> handles negative\n    arguments in accordance with the specification, by flipping the rectangle around the\n    appropriate axis.\n  </li>\n  <li>\n    Specifying a <code>null</code> or <code>undefined</code> image when calling or\n    <code>drawImage()</code> correctly throws a <code>TYPE_MISMATCH_ERR</code> exception\n    starting with (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2).\n  </li>\n  <li>\n    Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4), Firefox threw an exception if any of\n    the coordinate values was non-finite or zero. As per the specification, this no longer\n    happens.\n  </li>\n  <li>\n    Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6) now correctly supports CORS for drawing images\n    across domains without <a href=\"/en-US/docs/Web/HTML/CORS_enabled_image#what_is_a_.22tainted.22_canvas.3f\">tainting the\ncanvas</a>.\n  </li>\n  <li>\n    Gecko 11.0 (Firefox 11.0 / Thunderbird 11.0 / SeaMonkey 2.8) now allows SVG-as-an-image to be drawn into a\n    canvas without <a href=\"/en-US/docs/Web/HTML/CORS_enabled_image#what_is_a_.22tainted.22_canvas.3f\">tainting the\ncanvas</a>.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"notes","title":"Notes","isH3":false,"content":"<ul>\n  <li>\n    <code>drawImage()</code> only works correctly on an <a href=\"/en-US/docs/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>\n    when its <a href=\"/en-US/docs/Web/API/HTMLMediaElement/readyState\"><code>HTMLMediaElement.readyState</code></a> is greater than 1 (i.e.,\n    <strong>seek</strong> event fired after setting the <code>currentTime</code>\n    property).\n  </li>\n  <li><code>drawImage()</code> will always use the source element's <em>intrinsic size in\nCSS pixels</em> when drawing, cropping, and/or scaling.</li>\n  <li>\n    In some older browser versions, <code>drawImage()</code> will ignore all EXIF\n    metadata in images, including the Orientation. This behavior is especially troublesome\n    on iOS devices. You should detect the Orientation yourself and use\n    <code>rotate()</code> to make it right.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The interface defining this method: <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\"><code>CanvasRenderingContext2D</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"Notes","id":"notes"},{"text":"See also","id":"see_also"}],"summary":"The CanvasRenderingContext2D.drawImage() method of the\n  Canvas 2D API provides different ways to draw an image onto the canvas.","popularity":0.0201,"modified":"2022-02-18T09:24:31.000Z","other_translations":[{"title":"CanvasRenderingContext2D.drawImage()","locale":"es","native":"Español"},{"title":"CanvasRenderingContext2D.drawImage()","locale":"fr","native":"Français"},{"title":"CanvasRenderingContext2D.drawImage()","locale":"ru","native":"Русский"},{"title":"CanvasRenderingContext2D.drawImage()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/canvasrenderingcontext2d/drawimage","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/canvasrenderingcontext2d/drawimage/index.md","last_commit_url":"https://github.com/mdn/content/commit/89c8199b06e7fb2b76da4087cb9eedef065b2506","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CanvasRenderingContext2D","title":"CanvasRenderingContext2D"},{"uri":"/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage","title":"CanvasRenderingContext2D.drawImage()"}],"pageTitle":"CanvasRenderingContext2D.drawImage() - Web APIs | MDN","noIndexing":false}}