{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Element.setHTML()","mdn_url":"/en-US/docs/Web/API/Element/setHTML","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/HTML_Sanitizer_API\">HTML Sanitizer API</a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Interfaces</summary><ol><li><a href=\"/en-US/docs/Web/API/Sanitizer\"><code>Sanitizer</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>setHTML()</code></strong> method of the <a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a> interface is used to parse and sanitize a string of HTML and then insert it into the DOM as a subtree of the element.\n  It should be used instead of <a href=\"/en-US/docs/Web/API/Element/innerHTML\"><code>Element.innerHTML</code></a> for inserting untrusted strings of HTML into an element.\n</p>\n<p>\n  The parsing process drops any elements in the HTML string that are invalid in the context of the current element, while sanitizing removes any unsafe or otherwise unwanted elements, attributes or comments.\n  The default <code>Sanitizer()</code> configuration strips out XSS-relevant input by default, including <a href=\"/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> tags, custom elements, and comments.\n  The sanitizer configuration may be customized using <a href=\"/en-US/docs/Web/API/Sanitizer/Sanitizer\" title=\"Sanitizer()\"><code>Sanitizer()</code></a> constructor options.\n</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Use <a href=\"/en-US/docs/Web/API/Sanitizer/sanitizeFor\"><code>Sanitizer.sanitizeFor()</code></a> instead of this method if the string must be inserted into the DOM at a later point, for example if the target element is not yet available.</p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">setHTML</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> sanitizer<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"input\"><code>input</code></dt>\n  <dd>\n    <p>A string defining HTML to be sanitized.</p>\n  </dd>\n  <dt id=\"sanitizer\"><code>sanitizer</code></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/Sanitizer\"><code>Sanitizer</code></a> object, which defines what elements of the input will be sanitized.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p><code>undefined</code></p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The code below demonstrates how to sanitize a string of HTML and insert it into the <code>Element</code> with an id of <code>target</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> unsanitized_string <span class=\"token operator\">=</span> <span class=\"token string\">\"abc &lt;script&gt;alert(1)&lt;/script&gt; def\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Unsanitized string of HTML</span>\n<span class=\"token keyword\">const</span> sanitizer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sanitizer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Default sanitizer;</span>\n\n<span class=\"token comment\">// Get the Element with id \"target\" and set it with the sanitized string.</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setHTML</span><span class=\"token punctuation\">(</span>unsanitized_string<span class=\"token punctuation\">,</span> sanitizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Result (as a string): \"abc  def\"</span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p>\n    <strong>Note:</strong> This example uses the default sanitizer.\n    The <a href=\"/en-US/docs/Web/API/Sanitizer/Sanitizer\" title=\"Sanitizer\"><code>Sanitizer</code></a> constructor is used to configure sanitizer options.\n  </p>\n</div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://wicg.github.io/sanitizer-api/#dom-element-sethtml","title":"HTML Sanitizer API"}],"query":"api.Element.setHTML"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.Element.setHTML","dataURL":"/en-US/docs/Web/API/Element/setHTML/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Sanitizer/sanitizeFor\"><code>Sanitizer.sanitizeFor()</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Sanitizer_API\"><code>HTML Sanitizer API</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The setHTML() method of the Element interface is used to parse and sanitize a string of HTML and then insert it into the DOM as a subtree of the element.\n  It should be used instead of Element.innerHTML for inserting untrusted strings of HTML into an element.","popularity":0.0023,"modified":"2022-01-19T17:57:58.000Z","other_translations":[{"title":"Element.setHTML()","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/element/sethtml","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/element/sethtml/index.md","last_commit_url":"https://github.com/mdn/content/commit/e752a8fe731fbdb9061e39a6e2b797a7ccb7e2b5","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Element","title":"Element"},{"uri":"/en-US/docs/Web/API/Element/setHTML","title":"Element.setHTML()"}],"pageTitle":"Element.setHTML() - Web APIs | MDN","noIndexing":false}}