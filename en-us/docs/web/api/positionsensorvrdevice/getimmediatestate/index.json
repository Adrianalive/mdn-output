{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PositionSensorVRDevice.getImmediateState()","mdn_url":"/en-US/docs/Web/API/PositionSensorVRDevice/getImmediateState","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PositionSensorVRDevice\"><code>PositionSensorVRDevice</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><em><code>getImmediateState()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/PositionSensorVRDevice/getState\"><code>getState()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/PositionSensorVRDevice/resetSensor\"><code>resetSensor()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for WebVR API</summary><ol><li><a href=\"/en-US/docs/Web/API/Gamepad/displayId\"><code>Gamepad.displayId</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/activeVRDisplays\"><code>Navigator.activeVRDisplays</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/getVRDisplays\"><code>Navigator.getVRDisplays()</code></a></li><li><a href=\"/en-US/docs/Web/API/VRDisplay\"><code>VRDisplay</code></a></li><li><a href=\"/en-US/docs/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a></li><li><a href=\"/en-US/docs/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/VREyeParameters\"><code>VREyeParameters</code></a></li><li><a href=\"/en-US/docs/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a></li><li><a href=\"/en-US/docs/Web/API/VRFrameData\"><code>VRFrameData</code></a></li><li><a href=\"/en-US/docs/Web/API/VRLayerInit\"><code>VRLayerInit</code></a></li><li><a href=\"/en-US/docs/Web/API/VRPose\"><code>VRPose</code></a></li><li><a href=\"/en-US/docs/Web/API/VRStageParameters\"><code>VRStageParameters</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard deprecated\" id=\"sect1\"><p><strong>Deprecated:</strong> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p></div><div class=\"notecard experimental\" id=\"sect2\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>The <strong><code>getImmediateState()</code></strong> method of the <a href=\"/en-US/docs/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns the current instantaneous position sensor state. This is intended to only be used rarely, for certain special uses, for example sampling the immediate position of a hand orientation sensor â€” or at least it will be, in the future.</p>\n<p>For most standard uses, you'll probably want to use <a href=\"/en-US/docs/Web/API/PositionSensorVRDevice/getState\"><code>PositionSensorVRDevice.getState</code></a> instead.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> myPositionstate <span class=\"token operator\">=</span> PositionSensorVRDevice<span class=\"token punctuation\">.</span><span class=\"token function\">getImmediateState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"returns","title":"Returns","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/API/VRPose\"><code>VRPose</code></a> object.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Our <a href=\"https://mdn.github.io/webvr-tests/positionsensorvrdevice/\" class=\"external\" rel=\" noopener\">positionsensorvrdevice</a> demo uses the WebVR API to update the view of a simple <a href=\"/en-US/docs/Web/API/CanvasRenderingContext2D\" title=\"2D canvas\"><code>2D canvas</code></a> scene on each frame of a <a href=\"/en-US/docs/Web/API/window/requestAnimationFrame\" title=\"requestAnimationFrame\"><code>requestAnimationFrame</code></a> loop. The main function that updates the view data is as follows:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">setView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> posState <span class=\"token operator\">=</span> gPositionSensor<span class=\"token punctuation\">.</span><span class=\"token function\">getImmediateState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>hasPosition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    posPara<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Position: x'</span> <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" y\"</span>\n                                <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" z\"</span>\n                                <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    yPos <span class=\"token operator\">=</span> posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token constant\">HEIGHT</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      zPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      zPos <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>hasOrientation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    orientPara<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Orientation: x'</span> <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" y\"</span>\n                                <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" z\"</span>\n                                <span class=\"token operator\">+</span> <span class=\"token function\">roundToTwo</span><span class=\"token punctuation\">(</span>posState<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    xOrient <span class=\"token operator\">=</span> posState<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">;</span>\n    yOrient <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>posState<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token constant\">HEIGHT</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    zOrient <span class=\"token operator\">=</span> posState<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> <span class=\"token number\">180</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Here we are grabbing a <a href=\"/en-US/docs/Web/API/VRPose\"><code>VRPose</code></a> object using <code>getImmediateState()</code> and storing it in <code>posState</code> (the actual live demo uses <code>getState()</code>, but both seem to do the same thing currently.) We then check to make sure that position and orientation info is present in the current frame using <a href=\"/en-US/docs/Web/API/VRPose/hasPosition\"><code>VRPose.hasPosition</code></a> and <a href=\"/en-US/docs/Web/API/VRPose/hasOrientation\"><code>VRPose.hasOrientation</code></a> (these return <code>null</code> if, for example the head mounted display is turned off or not pointing at the position sensor, which would cause an error.)</p>\n<p>We then output the x, y and z position and orientation values for informational purposes, and use those values to update the <code>xPos</code>, <code>yPos</code>, <code>zPos</code>, <code>xOrient</code>, <code>yOrient</code>, and <code>zOrient</code> variables, which are used to update the scene rendering on each frame.</p>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PositionSensorVRDevice.getImmediateState","dataURL":"/en-US/docs/Web/API/PositionSensorVRDevice/getImmediateState/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/WebVR_API\">WebVR API homepage</a>.</li>\n  <li><a href=\"https://mixedreality.mozilla.org/\" class=\"external\" rel=\" noopener\">https://mixedreality.mozilla.org/</a> â€” demos, downloads, and other resources from the Mozilla VR team.</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The getImmediateState() method of the VRDisplay interface returns the current instantaneous position sensor state. This is intended to only be used rarely, for certain special uses, for example sampling the immediate position of a hand orientation sensor â€” or at least it will be, in the future.","popularity":0,"modified":"2021-09-14T18:08:09.000Z","source":{"folder":"en-us/web/api/positionsensorvrdevice/getimmediatestate","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/positionsensorvrdevice/getimmediatestate/index.md","last_commit_url":"https://github.com/mdn/content/commit/e13598c4e35243df24286e4842fafee5ae76217a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PositionSensorVRDevice","title":"PositionSensorVRDevice"},{"uri":"/en-US/docs/Web/API/PositionSensorVRDevice/getImmediateState","title":"PositionSensorVRDevice.getImmediateState()"}],"pageTitle":"PositionSensorVRDevice.getImmediateState() - Web APIs | MDN","noIndexing":false}}