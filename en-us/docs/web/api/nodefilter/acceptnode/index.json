{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"NodeFilter.acceptNode()","mdn_url":"/en-US/docs/Web/API/NodeFilter/acceptNode","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/NodeFilter\"><code>NodeFilter</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><em><code>acceptNode()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>ByteString</code></a></li><li><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>NodeFilter.acceptNode()</code></strong> method returns an\n  <code>unsigned short</code> that will be used to tell if a given <a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a>\n  must be accepted or not by the <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a> or <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a> iteration algorithm. This method is expected to be written by the user of a\n  <code>NodeFilter</code>. Possible return values are:\n</p>\n<table class=\"no-markdown\">\n  <thead>\n    <tr>\n      <th>Constant</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>NodeFilter.FILTER_ACCEPT</code></td>\n      <td>\n        Value returned by the\n        <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\" aria-current=\"page\"><code>NodeFilter.acceptNode()</code></a> method when a node\n        should be accepted.\n      </td>\n    </tr>\n    <tr>\n      <td><code>NodeFilter.FILTER_REJECT</code></td>\n      <td>\n        <p>\n          Value to be returned by the\n          <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\" aria-current=\"page\"><code>NodeFilter.acceptNode()</code></a> method when a\n          node should be rejected. For <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a>, child\n          nodes are also rejected.\n        </p>\n        <p>\n          For <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a>, this flag is synonymous\n          with <code>FILTER_SKIP</code>.\n        </p>\n      </td>\n    </tr>\n    <tr>\n      <td><code>NodeFilter.FILTER_SKIP</code></td>\n      <td>\n        <p>\n          Value to be returned by\n          <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\" aria-current=\"page\"><code>NodeFilter.acceptNode()</code></a> for nodes to be\n          skipped by the <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a> or\n          <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a> object.\n        </p>\n        <p>\n          The children of skipped nodes are still considered. This is treated as\n          \"skip this node but not its children\".\n        </p>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<p>\n  The function should return <code>NodeFilter.FILTER_ACCEPT</code>, which causes the\n  TreeWalker to return the node, <code>NodeFilter.FILTER_REJECT</code>, which causes the\n  TreeWalker to ignore the entire subtree, or <code>NodeFilter.FILTER_SKIP</code>.\n</p>\n<p>\n  The browser doesn't provide any object implementing this method. It is the user who is\n  expected to write an object implementing the <a href=\"/en-US/docs/Web/API/NodeFilter\"><code>NodeFilter</code></a> interface,\n  tailoring the <code>acceptNode()</code> method to its needs, and using it with some\n  <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a> or <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a> objects.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>result <span class=\"token operator\">=</span> nodeFilter<span class=\"token punctuation\">.</span><span class=\"token function\">acceptNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"node\"><em>node</em></dt>\n  <dd>\n    <p>Is a <a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a> being the object to check against the filter.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> nodeIterator <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createNodeIterator</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// Node to use as root</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'someId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Only consider nodes that are text nodes (nodeType 3)</span>\n  NodeFilter<span class=\"token punctuation\">.</span><span class=\"token constant\">SHOW_TEXT</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Object containing the function to use for the acceptNode method</span>\n  <span class=\"token comment\">// of the NodeFilter</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">acceptNode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Logic to determine whether to accept, reject or skip node</span>\n      <span class=\"token comment\">// In this case, only accept nodes that have content</span>\n      <span class=\"token comment\">// other than whitespace</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^\\s*$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> NodeFilter<span class=\"token punctuation\">.</span><span class=\"token constant\">FILTER_ACCEPT</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Show the content of every non-empty text node that is a child of root</span>\n<span class=\"token keyword\">var</span> node<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node <span class=\"token operator\">=</span> nodeIterator<span class=\"token punctuation\">.</span><span class=\"token function\">nextNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#dom-nodefilter-acceptnode","title":"DOM Standard"}],"query":"api.NodeFilter.acceptNode"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.NodeFilter.acceptNode","dataURL":"/en-US/docs/Web/API/NodeFilter/acceptNode/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li>The interface it belongs to: <a href=\"/en-US/docs/Web/API/NodeFilter\"><code>NodeFilter</code></a>.</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The NodeFilter.acceptNode() method returns an\n  unsigned short that will be used to tell if a given Node\n  must be accepted or not by the NodeIterator or TreeWalker iteration algorithm. This method is expected to be written by the user of a\n  NodeFilter. Possible return values are:","popularity":0,"modified":"2022-03-03T03:00:18.000Z","other_translations":[{"title":"NodeFilter.acceptNode()","locale":"fr","native":"Français"},{"title":"NodeFilter.acceptNode()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/nodefilter/acceptnode","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/nodefilter/acceptnode/index.md","last_commit_url":"https://github.com/mdn/content/commit/509279763c055ae0d4e11c6f9385d8c55dc8bb0a","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/NodeFilter","title":"NodeFilter"},{"uri":"/en-US/docs/Web/API/NodeFilter/acceptNode","title":"NodeFilter.acceptNode()"}],"pageTitle":"NodeFilter.acceptNode() - Web APIs | MDN","noIndexing":false}}