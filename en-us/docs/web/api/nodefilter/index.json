{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"NodeFilter","mdn_url":"/en-US/docs/Web/API/NodeFilter","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Document_Object_Model\">Document Object Model</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/NodeFilter\"><code>NodeFilter</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\"><code>acceptNode()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for DOM</summary><ol><li><a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a></li><li><a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a></li><li><a href=\"/en-US/docs/Web/API/AbstractRange\"><code>AbstractRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Attr\"><code>Attr</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>ByteString</code></a></li><li><a href=\"/en-US/docs/Web/API/CDATASection\"><code>CDATASection</code></a></li><li><a href=\"/en-US/docs/Web/API/CharacterData\"><code>CharacterData</code></a></li><li><a href=\"/en-US/docs/Web/API/Comment\"><code>Comment</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomEvent\"><code>CustomEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMError\"><code>DOMError</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMImplementation\"><code>DOMImplementation</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMParser\"><code>DOMParser</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPoint\"><code>DOMPoint</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMRect\"><code>DOMRect</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTimeStamp\"><code>DOMTimeStamp</code></a></li><li><a href=\"/en-US/docs/Web/API/DOMTokenList\"><code>DOMTokenList</code></a></li><li><a href=\"/en-US/docs/Web/API/Document\"><code>Document</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentFragment\"><code>DocumentFragment</code></a></li><li><a href=\"/en-US/docs/Web/API/DocumentType\"><code>DocumentType</code></a></li><li><a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a></li><li><a href=\"/en-US/docs/Web/API/Event\"><code>Event</code></a></li><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCollection\"><code>HTMLCollection</code></a></li><li><a href=\"/en-US/docs/Web/API/MutationObserver\"><code>MutationObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/NamedNodeMap\"><code>NamedNodeMap</code></a></li><li><a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a></li><li><a href=\"/en-US/docs/Web/API/NodeList\"><code>NodeList</code></a></li><li><a href=\"/en-US/docs/Web/API/ProcessingInstruction\"><code>ProcessingInstruction</code></a></li><li><a href=\"/en-US/docs/Web/API/Range\"><code>Range</code></a></li><li><a href=\"/en-US/docs/Web/API/StaticRange\"><code>StaticRange</code></a></li><li><a href=\"/en-US/docs/Web/API/Text\"><code>Text</code></a></li><li><a href=\"/en-US/docs/Web/API/TextDecoder\"><code>TextDecoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TextEncoder\"><code>TextEncoder</code></a></li><li><a href=\"/en-US/docs/Web/API/TimeRanges\"><code>TimeRanges</code></a></li><li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li><li><a href=\"/en-US/docs/Web/API/XMLDocument\"><code>XMLDocument</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>A <strong><code>NodeFilter</code></strong> interface represents an object used to filter the nodes in a <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a> or <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a>. A <code>NodeFilter</code> knows nothing about the document or traversing nodes; it only knows how to evaluate a single node against the provided filter.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> The browser doesn't provide any object implementing this interface. It is the user who is expected to write one, tailoring the <code>acceptNode()</code> method to its needs, and using it with some <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a> or <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a> objects.</p>\n</div>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p><em>This interface neither implements nor inherits any properties.</em></p>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<p><em>This interface doesn't inherit any methods.</em></p>\n<dl>\n  <dt id=\"nodefilter.acceptnode\"><a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\"><code>NodeFilter.acceptNode()</code></a></dt>\n  <dd>\n    <p>Returns an <code>unsigned short</code> that will be used to tell if a given <a href=\"/en-US/docs/Web/API/Node\"><code>Node</code></a> must be accepted or not by the <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a> or <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a> iteration algorithm.</p>\n    <p>This method is expected to be written by the user of a <code>NodeFilter</code>. Possible return values are:</p>\n    <table class=\"standard-table\">\n      <thead>\n        <tr>\n          <th>Constant</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><code>FILTER_ACCEPT</code></td>\n          <td>\n            Value returned by the\n            <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\"><code>NodeFilter.acceptNode()</code></a> method when a node\n            should be accepted.\n          </td>\n        </tr>\n        <tr>\n          <td><code>FILTER_REJECT</code></td>\n          <td>\n            <p>\n              Value to be returned by the\n              <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\"><code>NodeFilter.acceptNode()</code></a> method when a\n              node should be rejected. For <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a>, child\n              nodes are also rejected.\n            </p>\n            <p>\n              For <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a>, this flag is synonymous\n              with <code>FILTER_SKIP</code>.\n            </p>\n          </td>\n        </tr>\n        <tr>\n          <td><code>FILTER_SKIP</code></td>\n          <td>\n            <p>\n              Value to be returned by\n              <a href=\"/en-US/docs/Web/API/NodeFilter/acceptNode\"><code>NodeFilter.acceptNode()</code></a> for nodes to be\n              skipped by the <a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a> or\n              <a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a> object.\n            </p>\n            <p>\n              The children of skipped nodes are still considered. This is treated as\n              \"skip this node but not its children\".\n            </p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> nodeIterator <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createNodeIterator</span><span class=\"token punctuation\">(</span>\n  <span class=\"token comment\">// Node to use as root</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'someId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Only consider nodes that are text nodes (nodeType 3)</span>\n  NodeFilter<span class=\"token punctuation\">.</span><span class=\"token constant\">SHOW_TEXT</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">// Object containing the function to use for the acceptNode method</span>\n  <span class=\"token comment\">// of the NodeFilter</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">acceptNode</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Logic to determine whether to accept, reject or skip node</span>\n      <span class=\"token comment\">// In this case, only accept nodes that have content</span>\n      <span class=\"token comment\">// other than whitespace</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\S</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> NodeFilter<span class=\"token punctuation\">.</span><span class=\"token constant\">FILTER_ACCEPT</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Show the content of every non-empty text node that is a child of root</span>\n<span class=\"token keyword\">let</span> node<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>node <span class=\"token operator\">=</span> nodeIterator<span class=\"token punctuation\">.</span><span class=\"token function\">nextNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://dom.spec.whatwg.org/#interface-nodefilter","title":"DOM Standard"}],"query":"api.NodeFilter"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.NodeFilter","dataURL":"/en-US/docs/Web/API/NodeFilter/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><strong>Related interfaces</strong>\n    <ul>\n      <li><a href=\"/en-US/docs/Web/API/TreeWalker\"><code>TreeWalker</code></a></li>\n      <li><a href=\"/en-US/docs/Web/API/NodeIterator\"><code>NodeIterator</code></a>.</li>\n    </ul>\n  </li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"A NodeFilter interface represents an object used to filter the nodes in a NodeIterator or TreeWalker. A NodeFilter knows nothing about the document or traversing nodes; it only knows how to evaluate a single node against the provided filter.","popularity":0.0015,"modified":"2022-02-18T09:26:54.000Z","other_translations":[{"title":"NodeFilter","locale":"fr","native":"Français"},{"title":"NodeFilter","locale":"ko","native":"한국어"},{"title":"NodeFilter","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"NodeFilter","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/nodefilter","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/nodefilter/index.md","last_commit_url":"https://github.com/mdn/content/commit/93ae23dec42bba9d71d6f1ed45668d8d26847e9c","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/NodeFilter","title":"NodeFilter"}],"pageTitle":"NodeFilter - Web APIs | MDN","noIndexing":false}}