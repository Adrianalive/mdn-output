{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"WindowEventHandlers.onpopstate","mdn_url":"/en-US/docs/Web/API/WindowEventHandlers/onpopstate","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onafterprint\"><code>onafterprint</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onbeforeprint\"><code>onbeforeprint</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\"><code>onbeforeunload</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onhashchange\"><code>onhashchange</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onlanguagechange\"><code>onlanguagechange</code></a></li><li><em><code>onpopstate</code></em></li><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onrejectionhandled\"><code>onrejectionhandled</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onstorage\"><code>onstorage</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\"><code>onunhandledrejection</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowEventHandlers/onunload\"><code>onunload</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>onpopstate</code></strong> property of the\n  <a href=\"/en-US/docs/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"/en-US/docs/Web/Events/Event_handlers\">event handler</a> for\n  processing <a href=\"/en-US/docs/Web/API/Window/popstate_event\"><code>popstate</code></a>\n  events on the window.\n</p>\n<p>\n  A <code>popstate</code> event is dispatched to the window each time the active history\n  entry changes between two history entries for the same document. If the activated\n  history entry was created by a call to <code>history.pushState()</code>, or was affected\n  by a call to <code>history.replaceState()</code>, the <code>popstate</code> event's\n  <code>state</code> property contains a copy of the history entry's state object.\n</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> Calling <code>history.pushState()</code> or\n    <code>history.replaceState()</code> won't trigger a <code>popstate</code> event. The\n    <code>popstate</code> event is only triggered by performing a browser action, such as\n    clicking on the back button (or calling <code>history.back()</code> in JavaScript),\n    when navigating between two history entries for the same document.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span>onpopstate <span class=\"token operator\">=</span> funcRef<span class=\"token punctuation\">;</span>\n</code></pre></div>\n<ul>\n  <li><code>funcRef</code> is a handler function.</li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  For example, a page at <code>http://example.com/example.html</code> running the\n  following code will generate alerts as indicated:\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onpopstate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"location: \"</span> <span class=\"token operator\">+</span> document<span class=\"token punctuation\">.</span>location <span class=\"token operator\">+</span> <span class=\"token string\">\", state: \"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">page</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"title 1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"?page=1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">pushState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">page</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"title 2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"?page=2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">replaceState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">page</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"title 3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"?page=3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// alerts \"location: http://example.com/example.html?page=1, state: {\"page\":1}\"</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// alerts \"location: http://example.com/example.html, state: null</span>\nhistory<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// alerts \"location: http://example.com/example.html?page=3, state: {\"page\":3}</span>\n</code></pre></div>\n<p>\n  Note that even though the original history entry (for\n  <code>http://example.com/example.html</code>) has no state object associated with it, a\n  <code>popstate</code> event is still fired, when we activate that entry after the second\n  call to <code>history.back()</code>.\n</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/webappapis.html#handler-window-onpopstate","title":"HTML Standard"}],"query":"api.WindowEventHandlers.onpopstate"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.WindowEventHandlers.onpopstate","dataURL":"/en-US/docs/Web/API/WindowEventHandlers/onpopstate/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Window/history\"><code>window.history</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/History_API\">Manipulating the browser history</a></li>\n  <li><a href=\"/en-US/docs/Web/API/History_API/Example\">Ajax navigation example</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The onpopstate property of the\n  WindowEventHandlers mixin is the event handler for\n  processing popstate\n  events on the window.","popularity":0.0056,"modified":"2022-03-17T19:38:42.000Z","other_translations":[{"title":"WindowEventHandlers.onpopstate","locale":"de","native":"Deutsch"},{"title":"WindowEventHandlers.onpopstate","locale":"es","native":"Español"},{"title":"window.onpopstate","locale":"fr","native":"Français"},{"title":"WindowEventHandlers.onpopstate","locale":"ja","native":"日本語"},{"title":"WindowEventHandlers.onpopstate","locale":"ko","native":"한국어"},{"title":"WindowEventHandlers.onpopstate","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"WindowEventHandlers.onpopstate","locale":"ru","native":"Русский"},{"title":"window.onpopstate","locale":"zh-CN","native":"中文 (简体)"},{"title":"window.onpopstate","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/api/windoweventhandlers/onpopstate","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/windoweventhandlers/onpopstate/index.md","last_commit_url":"https://github.com/mdn/content/commit/23fb05a5f040535575d5b80165635e84b3cd4a84","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WindowEventHandlers","title":"WindowEventHandlers"},{"uri":"/en-US/docs/Web/API/WindowEventHandlers/onpopstate","title":"WindowEventHandlers.onpopstate"}],"pageTitle":"WindowEventHandlers.onpopstate - Web APIs | MDN","noIndexing":false}}