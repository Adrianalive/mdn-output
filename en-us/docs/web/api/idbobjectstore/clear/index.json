{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"IDBObjectStore.clear()","mdn_url":"/en-US/docs/Web/API/IDBObjectStore/clear","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/IndexedDB_API\">IndexedDB API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/autoIncrement\"><code>autoIncrement</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/indexNames\"><code>indexNames</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/keyPath\"><code>keyPath</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/name\"><code>name</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/transaction\"><code>transaction</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/add\"><code>add()</code></a></li><li><em><code>clear()</code></em></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/count\"><code>count()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/createIndex\"><code>createIndex()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/delete\"><code>delete()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/deleteIndex\"><code>deleteIndex()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/getAll\"><code>getAll()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/getAllKeys\"><code>getAllKeys()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/getKey\"><code>getKey()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/index\"><code>index()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/openCursor\"><code>openCursor()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/openKeyCursor\"><code>openKeyCursor()</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBObjectStore/put\"><code>put()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for IndexedDB</summary><ol><li><a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBCursorWithValue\"><code>IDBCursorWithValue</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>IDBEnvironment</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBFactory\"><code>IDBFactory</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBIndex\"><code>IDBIndex</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBOpenDBRequest\"><code>IDBOpenDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li><li><a href=\"/en-US/docs/Web/API/IDBVersionChangeEvent\"><code>IDBVersionChangeEvent</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>IDBVersionChangeRequest</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>clear()</code></strong> method of the <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>\n  interface creates and immediately returns an <a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> object, and\n  clears this object store in a separate thread. This is for deleting all the current\n  data out of an object store.\n</p>\n<p>\n  Clearing an object store consists of removing all records from the object store and\n  removing all records in indexes that reference the object store. To remove only some of\n  the records in a store, use <a href=\"/en-US/docs/Web/API/IDBObjectStore/delete\"><code>IDBObjectStore.delete</code></a> passing a key\n  or <a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a>.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> request <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"returns","title":"Returns","isH3":true,"content":"<p>\n  An <a href=\"/en-US/docs/Web/API/IDBRequest\"><code>IDBRequest</code></a> object on which subsequent events related to this\n  operation are fired.\n</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>This method may raise a <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> of one of the following types:</p>\n<table class=\"no-markdown\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Exception</th>\n      <th scope=\"col\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>ReadOnlyError</code></td>\n      <td>The transaction associated with this operation is in read-only <a href=\"/en-US/docs/Web/API/IDBTransaction#mode_constants\">mode</a>.</td>\n    </tr>\n    <tr>\n      <td><code>TransactionInactiveError</code></td>\n      <td>\n        This <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a>'s transaction is\n        inactive.<br>\n      </td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>\n  In the following code snippet, we open a read/write transaction on our database and\n  clear all the current data out of the object store using <code>clear()</code>. For a\n  full working example, see our <a href=\"https://github.com/mdn/to-do-notifications/\" class=\"external\" rel=\" noopener\">To-do Notifications</a> app\n  (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Let us open our database</span>\n<span class=\"token keyword\">var</span> DBOpenRequest <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>indexedDB<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nDBOpenRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Database initialized.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// store the result of opening the database in the db variable.</span>\n  <span class=\"token comment\">// This is used a lot below</span>\n  db <span class=\"token operator\">=</span> DBOpenRequest<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Clear all the data form the object store</span>\n  <span class=\"token function\">clearData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">clearData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// open a read/write db transaction, ready for clearing the data</span>\n  <span class=\"token keyword\">var</span> transaction <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">transaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"readwrite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// report on the success of the transaction completing, when everything is done</span>\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">oncomplete</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction completed.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  transaction<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Transaction not opened due to error: '</span> <span class=\"token operator\">+</span> transaction<span class=\"token punctuation\">.</span>error <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create an object store on the transaction</span>\n  <span class=\"token keyword\">var</span> objectStore <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">objectStore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"toDoList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Make a request to clear all the data out of the object store</span>\n  <span class=\"token keyword\">var</span> objectStoreRequest <span class=\"token operator\">=</span> objectStore<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  objectStoreRequest<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onsuccess</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// report the success of our request</span>\n    note<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;li&gt;Request successful.&lt;/li&gt;'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/IndexedDB/#ref-for-dom-idbobjectstore-clear③","title":"Indexed Database API 3.0"}],"query":"api.IDBObjectStore.clear"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.IDBObjectStore.clear","dataURL":"/en-US/docs/Web/API/IDBObjectStore/clear/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\">Using IndexedDB</a></li>\n  <li>Starting transactions: <a href=\"/en-US/docs/Web/API/IDBDatabase\"><code>IDBDatabase</code></a></li>\n  <li>Using transactions: <a href=\"/en-US/docs/Web/API/IDBTransaction\"><code>IDBTransaction</code></a></li>\n  <li>Setting a range of keys: <a href=\"/en-US/docs/Web/API/IDBKeyRange\"><code>IDBKeyRange</code></a></li>\n  <li>Retrieving and making changes to your data: <a href=\"/en-US/docs/Web/API/IDBObjectStore\"><code>IDBObjectStore</code></a></li>\n  <li>Using cursors: <a href=\"/en-US/docs/Web/API/IDBCursor\"><code>IDBCursor</code></a></li>\n  <li>Reference example: <a href=\"https://github.com/mdn/to-do-notifications/tree/gh-pages\" class=\"external\" rel=\" noopener\">To-do\nNotifications</a> (<a href=\"https://mdn.github.io/to-do-notifications/\" class=\"external\" rel=\" noopener\">view example live</a>.)</li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The clear() method of the IDBObjectStore\n  interface creates and immediately returns an IDBRequest object, and\n  clears this object store in a separate thread. This is for deleting all the current\n  data out of an object store.","popularity":0.0011,"modified":"2022-01-31T23:07:24.000Z","other_translations":[{"title":"IDBObjectStore.clear()","locale":"fr","native":"Français"}],"source":{"folder":"en-us/web/api/idbobjectstore/clear","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/idbobjectstore/clear/index.md","last_commit_url":"https://github.com/mdn/content/commit/3891747c0e8cd2c9235daff6c4e603cb67ee4f1d","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/IDBObjectStore","title":"IDBObjectStore"},{"uri":"/en-US/docs/Web/API/IDBObjectStore/clear","title":"IDBObjectStore.clear()"}],"pageTitle":"IDBObjectStore.clear() - Web APIs | MDN","noIndexing":false}}