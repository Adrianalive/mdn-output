{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"DataTransfer.setDragImage()","mdn_url":"/en-US/docs/Web/API/DataTransfer/setDragImage","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API\">HTML Drag and Drop API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/DataTransfer\"><code>DataTransfer</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransfer/DataTransfer\"><code>DataTransfer()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransfer/dropEffect\"><code>dropEffect</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransfer/effectAllowed\"><code>effectAllowed</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransfer/files\"><code>files</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransfer/items\"><code>items</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozCursor\"><code>mozCursor</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozItemCount\"><code>mozItemCount</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozSourceNode\"><code>mozSourceNode</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozUserCancelled\"><code>mozUserCancelled</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransfer/types\"><code>types</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/addElement\"><code>addElement()</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransfer/clearData\"><code>clearData()</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransfer/getData\"><code>getData()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozClearDataAt\"><code>mozClearDataAt()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozGetDataAt\"><code>mozGetDataAt()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozSetDataAt\"><code>mozSetDataAt()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/API/DataTransfer/mozTypesAt\"><code>mozTypesAt()</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransfer/setData\"><code>setData()</code></a></li><li><em><code>setDragImage()</code></em></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for HTML Drag and Drop API</summary><ol><li><a href=\"/en-US/docs/Web/API/DataTransferItem\"><code>DataTransferItem</code></a></li><li><a href=\"/en-US/docs/Web/API/DataTransferItemList\"><code>DataTransferItemList</code></a></li><li><a href=\"/en-US/docs/Web/API/DragEvent\"><code>DragEvent</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  When a drag occurs, a translucent image is generated from the drag target (the element\n  the <code><a href=\"/en-US/docs/Web/API/Document/dragstart_event\" title=\"/en-US/docs/Web/Events/dragstart\">dragstart</a></code> event is fired at), and follows the mouse pointer during the\n  drag. This image is created automatically, so you do not need to create it yourself.\n  However, if a custom image is desired, the\n  <strong><code>DataTransfer.setDragImage()</code></strong> method can be used to set the\n  custom image to be used. The image will typically be an <a href=\"/en-US/docs/Web/HTML/Element/image\"><code>&lt;image&gt;</code></a> element\n  but it can also be a <a href=\"/en-US/docs/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> or any other visible element.\n</p>\n<p>\n  The method's <code>x</code> and <code>y</code> coordinates define how the image should\n  appear relative to the mouse pointer. These coordinates define the offset into the image\n  where the mouse cursor should be. For instance, to display the image so that the pointer\n  is at its center, use values that are half the width and height of the image.\n</p>\n<p>This method must be called in the <code><a href=\"/en-US/docs/Web/API/Document/dragstart_event\" title=\"/en-US/docs/Web/Events/dragstart\">dragstart</a></code> event handler.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">void</span> dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span>img <span class=\"token operator\">|</span> element<span class=\"token punctuation\">,</span> xOffset<span class=\"token punctuation\">,</span> yOffset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"arguments","title":"Arguments","isH3":true,"content":"<dl>\n  <dt id=\"img_\"><em>img |</em> element</dt>\n  <dd>\n    <p>An image <a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a> element to use for the drag feedback image.</p>\n    <p>\n      If <a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a> is an img element, then set the drag data store bitmap to\n      the element's image (at its intrinsic size); otherwise, set the drag data store bitmap\n      to an image generated from the given element (the exact mechanism for doing so is not\n      currently specified).\n    </p>\n    <p>Note: If the <a href=\"/en-US/docs/Web/API/Element\"><code>Element</code></a> is an existing <a href=\"/en-US/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a> it needs to be visible in the viewport in order to be shown as a drag feedback image. Alternatively, you can create a new DOM element that might be off-screen specifically for this purpose.</p>\n  </dd>\n  <dt id=\"xoffset\"><em>xOffset</em></dt>\n  <dd>\n    <p>A <code>long</code> indicating the horizontal offset within the image.</p>\n  </dd>\n  <dt id=\"yoffset\"><em>yOffset</em></dt>\n  <dd>\n    <p>A <code>long</code> indicating the vertical offset within the image.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<p>\n  This example shows how to use the <code>setDragImage()</code> method. Note the example\n  refers to an image file named <code>example.gif</code>. If that file is present, it will\n  be used as the drag image and if that file is not present, the browser will use its\n  default drag image.\n</p>\n<p><a href=\"https://codepen.io/webgeeker/full/KBzrxE/\" class=\"external\" rel=\" noopener\">demo</a></p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>html lang<span class=\"token operator\">=</span>en<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">&gt;</span>Example <span class=\"token keyword\">of</span> DataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>title<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>meta name<span class=\"token operator\">=</span><span class=\"token string\">\"viewport\"</span> content<span class=\"token operator\">=</span><span class=\"token string\">\"width=device-width\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">&gt;</span>\n  div <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">margin</span><span class=\"token operator\">:</span> 0em<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> 2em<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  #source <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> blue<span class=\"token punctuation\">;</span>\n    <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  #target <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">border</span><span class=\"token operator\">:</span> 1px solid black<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">dragstart_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dragStart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// Set the drag's format and data. Use the event target's id for the data</span>\n ev<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">,</span> ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// Create an image and use it for the drag image</span>\n <span class=\"token comment\">// NOTE: change \"example.gif\" to an existing image or the image will not</span>\n <span class=\"token comment\">// be created and the default drag image will be used.</span>\n <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'example.gif'</span><span class=\"token punctuation\">;</span>\n ev<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">dragover_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dragOver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n ev<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">drop_handler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Drop\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n ev<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// Get the data, which is the id of the drop target</span>\n <span class=\"token keyword\">var</span> data <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>dataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">&gt;</span>Example <span class=\"token keyword\">of</span> <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">&gt;</span>DataTransfer<span class=\"token punctuation\">.</span><span class=\"token function\">setDragImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>p id<span class=\"token operator\">=</span><span class=\"token string\">\"source\"</span> ondragstart<span class=\"token operator\">=</span><span class=\"token string\">\"dragstart_handler(event);\"</span> draggable<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">&gt;</span>\n     Select <span class=\"token keyword\">this</span> element<span class=\"token punctuation\">,</span> drag it to the Drop Zone and then release the selection to move the element<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"target\"</span> ondrop<span class=\"token operator\">=</span><span class=\"token string\">\"drop_handler(event);\"</span> ondragover<span class=\"token operator\">=</span><span class=\"token string\">\"dragover_handler(event);\"</span><span class=\"token operator\">&gt;</span>Drop Zone<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">&gt;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/dnd.html#dom-datatransfer-setdragimage-dev","title":"HTML Standard"}],"query":"api.DataTransfer.setDragImage"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.DataTransfer.setDragImage","dataURL":"/en-US/docs/Web/API/DataTransfer/setDragImage/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API\">Drag and drop</a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations\">Drag Operations</a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\">Recommended Drag Types</a></li>\n  <li><a href=\"/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Multiple_items\">Dragging and Dropping Multiple Items</a></li>\n  <li><a href=\"https://codepen.io/tech_query/pen/MqGgap\" class=\"external\" rel=\" noopener\">DataTransfer test - Paste or Drag</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"When a drag occurs, a translucent image is generated from the drag target (the element\n  the dragstart event is fired at), and follows the mouse pointer during the\n  drag. This image is created automatically, so you do not need to create it yourself.\n  However, if a custom image is desired, the\n  DataTransfer.setDragImage() method can be used to set the\n  custom image to be used. The image will typically be an <image> element\n  but it can also be a <canvas> or any other visible element.","popularity":0.0022,"modified":"2022-02-18T09:24:31.000Z","other_translations":[{"title":"DataTransfer.setDragImage()","locale":"ja","native":"日本語"},{"title":"DataTransfer.setDragImage()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/datatransfer/setdragimage","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/datatransfer/setdragimage/index.md","last_commit_url":"https://github.com/mdn/content/commit/89c8199b06e7fb2b76da4087cb9eedef065b2506","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/DataTransfer","title":"DataTransfer"},{"uri":"/en-US/docs/Web/API/DataTransfer/setDragImage","title":"DataTransfer.setDragImage()"}],"pageTitle":"DataTransfer.setDragImage() - Web APIs | MDN","noIndexing":false}}