{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaStream.active","mdn_url":"/en-US/docs/Web/API/MediaStream/active","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Media_Streams_API\">Media Streams API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaStream/MediaStream\"><code>MediaStream()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><em><code>active</code></em></li><li><a href=\"/en-US/docs/Web/API/MediaStream/id\"><code>id</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaStream/addTrack\"><code>addTrack()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/clone\"><code>clone()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/MediaStream/getAudioTracks\"><code>getAudioTracks()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/getTrackById\"><code>getTrackById()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/MediaStream/getTracks\"><code>getTracks()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/getVideoTracks\"><code>getVideoTracks()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Events</summary><ol><li><a href=\"/en-US/docs/Web/API/MediaStream/addtrack_event\"><code>addtrack</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStream/removetrack_event\"><code>removetrack</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Inheritance:</summary><ol><li><a href=\"/en-US/docs/Web/API/EventTarget\"><code>EventTarget</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Media Capture and Streams</summary><ol><li><a href=\"/en-US/docs/Web/API/BlobEvent\"><code>BlobEvent</code></a></li><li><a href=\"/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack\"><code>CanvasCaptureMediaStream</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>ConstrainBoolean</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>ConstrainDOMString</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>ConstrainDouble</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>ConstrainLong</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>DoubleRange</code></a></li><li><a href=\"/en-US/docs/Web/API/HTMLCanvasElement/captureStream\"><code>HTMLCanvasElement.captureStream()</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>LongRange</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices\"><code>MediaDevices</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaStreamTrackEvent\"><code>MediaStreamTrackEvent</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>MediaTrackCapabilities</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackConstraints\"><code>MediaTrackConstraints</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSettings\"><code>MediaTrackSettings</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaTrackSupportedConstraints\"><code>MediaTrackSupportedConstraints</code></a></li><li><a href=\"/en-US/docs/Web/API/Navigator/mediaDevices\"><code>Navigator.mediaDevices</code></a></li><li><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>VideoStreamTrack</code></a></li><li><a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\"><code>navigator.mediaDevices.getUserMedia()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>active</code></strong> read-only property of the\n  <a href=\"/en-US/docs/Web/API/MediaStream\"><code>MediaStream</code></a> interface returns a Boolean value which is\n  <code>true</code> if the stream is currently active; otherwise, it returns\n  <code>false</code>. A stream is considered <strong>active</strong> if at least one of\n  its <a href=\"/en-US/docs/Web/API/MediaStreamTrack\"><code>MediaStreamTrack</code></a>s is not in the <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>MediaStreamTrack.ended</code></a>\n  state. Once every track has ended, the stream's <code>active</code> property becomes\n  <code>false</code>.\n</p>"}},{"type":"prose","value":{"id":"value","title":"Value","isH3":false,"content":"<p>\n  A Boolean value which is <code>true</code> if the stream is currently active;\n  otherwise, the value is <code>false</code>.\n</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>\n  In this example, a new stream whose source is the user's local camera and microphone is\n  requested using <a href=\"/en-US/docs/Web/API/MediaDevices/getUserMedia\" title=\"getUserMedia()\"><code>getUserMedia()</code></a>. When that\n  stream becomes available (that is, when the returned <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> is fulfilled,\n  a button on the page is updated based on whether or not the stream is currently active.\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>mediaDevices<span class=\"token punctuation\">.</span><span class=\"token function\">getUserMedia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">audio</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">video</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\npromise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">stream</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> startBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#startBtn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  startBtn<span class=\"token punctuation\">.</span>disabled <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/mediacapture-main/#dom-mediastream-active","title":"Media Capture and Streams"}],"query":"api.MediaStream.active"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaStream.active","dataURL":"/en-US/docs/Web/API/MediaStream/active/bcd.json"}}],"toc":[{"text":"Value","id":"value"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The active read-only property of the\n  MediaStream interface returns a Boolean value which is\n  true if the stream is currently active; otherwise, it returns\n  false. A stream is considered active if at least one of\n  its MediaStreamTracks is not in the MediaStreamTrack.ended\n  state. Once every track has ended, the stream's active property becomes\n  false.","popularity":0.0008,"modified":"2022-03-31T05:19:03.000Z","other_translations":[{"title":"active","locale":"ja","native":"日本語"},{"title":"active","locale":"ru","native":"Русский"},{"title":"active","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/mediastream/active","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/mediastream/active/index.md","last_commit_url":"https://github.com/mdn/content/commit/3fc1a4bd600a17a09030ba250401ff573b0e3343","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaStream","title":"MediaStream"},{"uri":"/en-US/docs/Web/API/MediaStream/active","title":"MediaStream.active"}],"pageTitle":"MediaStream.active - Web APIs | MDN","noIndexing":false}}