{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"URLSearchParams.set()","mdn_url":"/en-US/docs/Web/API/URLSearchParams/set","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/URL_API\">URL API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><a href=\"/en-US/docs/Web/API/URLSearchParams/URLSearchParams\"><code>URLSearchParams()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/URLSearchParams/append\"><code>append()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/delete\"><code>delete()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/entries\"><code>entries()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/forEach\"><code>forEach()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/getAll\"><code>getAll()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/has\"><code>has()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/keys\"><code>keys()</code></a></li><li><em><code>set()</code></em></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/sort\"><code>sort()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/toString\"><code>toString()</code></a></li><li><a href=\"/en-US/docs/Web/API/URLSearchParams/values\"><code>values()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for URL API</summary><ol><li><a href=\"/en-US/docs/Web/API/URL\"><code>URL</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>set()</code></strong> method of the <a href=\"/en-US/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\n  interface sets the value associated with a given search parameter to the given value.\n  If there were several matching values, this method deletes the others. If the search\n  parameter doesn't exist, this method creates it.\n</p><div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> This feature is available in <a href=\"/en-US/docs/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>URLSearchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"name\"><code>name</code></dt>\n  <dd>\n    <p>The name of the parameter to set.</p>\n  </dd>\n  <dt id=\"value\"><code>value</code></dt>\n  <dd>\n    <p>The value of the parameter to set.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>Void.</p>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>Let's start with a simple example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://example.com?foo=1&amp;bar=2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Add a third parameter.</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'baz'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"foo=1&amp;bar=2&amp;baz=3\"</span>\n</code></pre></div>\n<p>\n  Below is a real-life example demonstrating how to create a <a href=\"/en-US/docs/Web/API/URL\"><code>URL</code></a> and set\n  some search parameters.\n</p>\n<p>\n  You can copy and paste the example in a code environment like Codepen, JSFiddle, or the\n  <a href=\"https://firefox-source-docs.mozilla.org/devtools-user/web_console/the_command_line_interpreter/index.html\" class=\"external\" rel=\" noopener\">multi-line\nJavaScript interpreter in Firefox</a>.\n</p>\n<ul>\n  <li>\n    line #41: Comment out this line to stop dumping the search parameters to the\n    console (<code>debug()</code>).\n  </li>\n  <li>\n    line #43: Dumps the generated object and its string representation to the console\n    (<code>info()</code>).\n  </li>\n  <li>\n    line #44: Tries to automatically open a new window/tab with the generated URL\n    (when uncommented).\n  </li>\n</ul>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token string\">'use strict'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">genURL</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rExp<span class=\"token punctuation\">,</span> aText<span class=\"token punctuation\">,</span> bDebug<span class=\"token operator\">=</span><span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> theURL\n\n  theURL<span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://regexr.com'</span><span class=\"token punctuation\">)</span>\n  theURL<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'expression'</span><span class=\"token punctuation\">,</span> rExp<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  theURL<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'tool'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'replace'</span> <span class=\"token punctuation\">)</span>\n  theURL<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\u2911\\u20dc'</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">// ⤑⃜</span>\n  theURL<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span> aText<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bDebug <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Display the key/value pairs</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> pair <span class=\"token keyword\">of</span> theURL<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' = \\''</span> <span class=\"token operator\">+</span> pair<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>theURL<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> theURL\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token function\">genURL</span><span class=\"token punctuation\">(</span>\n  <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(^\\s*\\/\\/|\\s*[^:]\\/\\/).*\\s*$|\\s*\\/\\*(.|\\n)+?\\*\\/\\s*$</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gm</span></span>  <span class=\"token comment\">// single/multi-line comments</span>\n  <span class=\"token comment\">// /(^\\s*\\/\\/.*|\\s*[^:]\\/\\/.*)/g                          // single-line comments</span>\n  <span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"These should work:\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"// eslint-disable-next-line no-unused-vars\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"lockPref( 'keyword.URL',\\t\\t'https://duckduckgo.com/html/?q=!+' )\\t//      test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"/*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"  * bla bla    \"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"*/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"/* bla bla */\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"// bla bla \"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"These shouldn\\'t work:\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"console.log(\\\"http://foo.co.uk/\\\")\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"var url = \\\"http://regexr.com/foo.html?q=bar\\\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"alert(\\\"https://mediatemple.net\\\")\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span> url<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// window.open( url, 'regex_site' )</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://url.spec.whatwg.org/#dom-urlsearchparams-set","title":"URL Standard"}],"query":"api.URLSearchParams.set"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.URLSearchParams.set","dataURL":"/en-US/docs/Web/API/URLSearchParams/set/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The set() method of the URLSearchParams\n  interface sets the value associated with a given search parameter to the given value.\n  If there were several matching values, this method deletes the others. If the search\n  parameter doesn't exist, this method creates it.","popularity":0.0062,"modified":"2022-01-25T11:14:26.000Z","other_translations":[{"title":"URLSearchParams.set()","locale":"ja","native":"日本語"},{"title":"URLSearchParams.set()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/urlsearchparams/set","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/urlsearchparams/set/index.md","last_commit_url":"https://github.com/mdn/content/commit/d304a553b8c05629376dfc8b593364cd3128b07d","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/URLSearchParams","title":"URLSearchParams"},{"uri":"/en-US/docs/Web/API/URLSearchParams/set","title":"URLSearchParams.set()"}],"pageTitle":"URLSearchParams.set() - Web APIs | MDN","noIndexing":false}}