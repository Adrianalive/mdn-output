{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaCapabilities.decodingInfo()","mdn_url":"/en-US/docs/Web/API/MediaCapabilities/decodingInfo","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/MediaCapabilities\"><code>MediaCapabilities</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>decodingInfo()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/MediaCapabilities/encodingInfo\"><code>encodingInfo()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>MediaCapabilities.decodingInfo()</code></strong> method, part of the <a href=\"/en-US/docs/Web/API/MediaCapabilities\">Media Capabilities API</a>, returns a promise with the tested media configuration's capabilities info; this contains the three Boolean properties <code>supported</code>, <code>smooth</code>, and <code>powerefficient</code>, which describe whether decoding the media described would be supported, smooth, and powerefficient.</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>mediaCapabilities<span class=\"token punctuation\">.</span><span class=\"token function\">decodingInfo</span><span class=\"token punctuation\">(</span>MediaDecodingConfiguration<span class=\"token punctuation\">)</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"mediadecodingconfiguration\">MediaDecodingConfiguration</dt>\n  <dd>\n    <p>A valid <a href=\"/en-US/docs/Web/API/MediaDecodingConfiguration\"><code>MediaDecodingConfiguration</code></a> dictionary containing a valid media decoding <code>type</code> of <code>file</code> or <code>media-source</code> and a valid media configuration: either an <a href=\"/en-US/docs/Web/API/AudioConfiguration\"><code>AudioConfiguration</code></a> or a <a href=\"/en-US/docs/Web/API/VideoConfiguration\"><code>VideoConfiguration</code></a>.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> fulfilling with an object containing three Boolean attributes:</p>\n<ul>\n  <li><code>supported</code>: Given the properties defined in the <a href=\"/en-US/docs/Web/API/MediaConfiguration\"><code>MediaConfiguration</code></a>, can the specified piece of media content be encoded (if <a href=\"/en-US/docs/Web/API/MediaEncodingConfiguration\"><code>MediaEncodingConfiguration</code></a> is set) or decode (if <a href=\"/en-US/docs/Web/API/MediaDecodingConfiguration\"><code>MediaDecodingConfiguration</code></a> is set) at all? If yes, <code>supported</code> is <em>true</em>. Otherwise, it is <em>false</em>.</li>\n  <li><code>smooth</code>: Given the properties defined in the <a href=\"/en-US/docs/Web/API/MediaConfiguration\"><code>MediaConfiguration</code></a>, will the playback of the specified piece of media be high quality? Will it be smooth? If <code>supported</code> is <code>true</code>, and playback will be smooth, <code>smooth</code> is <em>true</em>, Otherwise, is it <em>false.</em></li>\n  <li><code>powerEfficient</code>: Given the properties defined in the <a href=\"/en-US/docs/Web/API/MediaConfiguration\"><code>MediaConfiguration</code></a>, will the playback of the specified piece of media be power efficient? If <code>supported</code> is <code>true</code>, and playback will be power efficient, <code>powerEfficient</code> is <em>true</em>, Otherwise, is it <em>false.</em></li>\n</ul>\n<p>Browsers will report a supported media configuration as <code>smooth</code> and <code>powerEfficient</code> until stats on this device have been recorded. All supported audio codecs are reported to be power efficient.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<p>A <code>TypeError</code> is raised if the <code>MediaConfiguration</code> passed to the <code>decodingInfo()</code> method is invalid, either because the type is not video or audio, the <code>contentType</code> is not a valid codec MIME type, the media decoding configuration is not a valid value for the <a href=\"/en-US/docs/Web/API/MediaDecodingType\" class=\"page-not-created\" title=\"This is a link to an unwritten page\">media decoding type</a>, or any other error in the media configuration passed to the method, including omitting values required in the <a href=\"/en-US/docs/Web/API/MediaDecodingConfiguration\">media decoding configuration</a>.</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">//Create media configuration to be tested</span>\n<span class=\"token keyword\">const</span> mediaConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span> <span class=\"token operator\">:</span> <span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// or 'media-source'</span>\n    <span class=\"token literal-property property\">audio</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">contentType</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"audio/ogg; codecs=vorbis\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// valid content type</span>\n        <span class=\"token literal-property property\">channels</span> <span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// audio channels used by the track</span>\n        <span class=\"token literal-property property\">bitrate</span> <span class=\"token operator\">:</span> <span class=\"token number\">132700</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// number of bits used to encode 1s of audio</span>\n        <span class=\"token literal-property property\">samplerate</span> <span class=\"token operator\">:</span> <span class=\"token number\">5200</span> <span class=\"token comment\">// number of audio samples making up that 1s.</span>\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// check support and performance</span>\nnavigator<span class=\"token punctuation\">.</span>mediaCapabilities<span class=\"token punctuation\">.</span><span class=\"token function\">decodingInfo</span><span class=\"token punctuation\">(</span>mediaConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This configuration is '</span> <span class=\"token operator\">+</span>\n        <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>supported <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'not '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'supported, '</span> <span class=\"token operator\">+</span>\n        <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>smooth <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'not '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'smooth, and '</span> <span class=\"token operator\">+</span>\n        <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>powerEfficient <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'not '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'power efficient.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/media-capabilities/#ref-for-dom-mediacapabilities-decodinginfo","title":"Media Capabilities"}],"query":"api.MediaCapabilities.decodingInfo"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.MediaCapabilities.decodingInfo","dataURL":"/en-US/docs/Web/API/MediaCapabilities/decodingInfo/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaDecodingConfiguration\"><code>MediaDecodingConfiguration</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/VideoConfiguration\"><code>VideoConfiguration</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/AudioConfiguration\"><code>AudioConfiguration</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/MediaCapabilities/encodingInfo\"><code>MediaCapabilities.encodingInfo()</code></a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaCapabilities.decodingInfo() method, part of the Media Capabilities API, returns a promise with the tested media configuration's capabilities info; this contains the three Boolean properties supported, smooth, and powerefficient, which describe whether decoding the media described would be supported, smooth, and powerefficient.","popularity":0,"modified":"2022-02-18T09:24:31.000Z","source":{"folder":"en-us/web/api/mediacapabilities/decodinginfo","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/mediacapabilities/decodinginfo/index.md","last_commit_url":"https://github.com/mdn/content/commit/89c8199b06e7fb2b76da4087cb9eedef065b2506","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaCapabilities","title":"MediaCapabilities"},{"uri":"/en-US/docs/Web/API/MediaCapabilities/decodingInfo","title":"MediaCapabilities.decodingInfo()"}],"pageTitle":"MediaCapabilities.decodingInfo() - Web APIs | MDN","noIndexing":false}}