{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"ReadableStreamBYOBReader.read()","mdn_url":"/en-US/docs/Web/API/ReadableStreamBYOBReader/read","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Streams_API\">Streams API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Constructor</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader/closed\"><code>closed</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader/cancel\"><code>cancel()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>read()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader/releaseLock\"><code>releaseLock()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Streams</summary><ol><li><a href=\"/en-US/docs/Web/API/Response/body\"><code>Body.body</code></a></li><li><a href=\"/en-US/docs/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code></a></li><li><a href=\"/en-US/docs/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableByteStreamController\"><code>ReadableByteStreamController</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamBYOBRequest\"><code>ReadableStreamBYOBRequest</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultController\"><code>ReadableStreamDefaultController</code></a></li><li><a href=\"/en-US/docs/Web/API/ReadableStreamDefaultReader\"><code>ReadableStreamDefaultReader</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStream\"><code>WritableStream</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a></li><li><a href=\"/en-US/docs/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a></li><li><a href=\"/en-US/docs/Web/API/fetch\"><code>fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div class=\"notecard experimental\" id=\"sect1\"><p><strong>Experimental:</strong> <strong>This is an <a href=\"/en-US/docs/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p></div>\n<p>\n  The <strong><code>read()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/ReadableStreamBYOBReader\"><code>ReadableStreamBYOBReader</code></a> interface returns a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an object representing the next chunk in the stream's queue.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> promise <span class=\"token operator\">=</span> readableStreamBYOBReader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"view\">view</dt>\n  <dd>\n    <p>The view to be read into.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills/rejects with a result depending on the state of\n  the stream. The following are possible:\n</p>\n<ul>\n  <li>\n    If a chunk is available, the promise fulfills with an object of the form\n    <code>{ value: theChunk, done: false }</code>.\n  </li>\n  <li>\n    If the stream is closed, the promise fulfills with an object of the\n    form <code>{ value: undefined, done: true }</code>.\n  </li>\n  <li>If the stream throws an error, the promise rejects with the relevant error.</li>\n</ul>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"typeerror\">TypeError</dt>\n  <dd>\n    <p>\n      The source object is not a <code>ReadableStreamBYOBReader</code>, the stream has no\n      owner, the view is not an object or has become detached, or the view's length is 0.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>TBD.</p>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://streams.spec.whatwg.org/#ref-for-byob-reader-read③","title":"Streams Standard"}],"query":"api.ReadableStreamBYOBReader.read"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.ReadableStreamBYOBReader.read","dataURL":"/en-US/docs/Web/API/ReadableStreamBYOBReader/read/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The read() method of the\n  ReadableStreamBYOBReader interface returns a Promise that resolves with an object representing the next chunk in the stream's queue.","popularity":0,"modified":"2022-01-31T23:00:43.000Z","other_translations":[{"title":"ReadableStreamBYOBReader.read()","locale":"ja","native":"日本語"}],"source":{"folder":"en-us/web/api/readablestreambyobreader/read","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/readablestreambyobreader/read/index.md","last_commit_url":"https://github.com/mdn/content/commit/55f17d4608c3bdc3e31d0abfaba6fc61d78a0ff5","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/ReadableStreamBYOBReader","title":"ReadableStreamBYOBReader"},{"uri":"/en-US/docs/Web/API/ReadableStreamBYOBReader/read","title":"ReadableStreamBYOBReader.read()"}],"pageTitle":"ReadableStreamBYOBReader.read() - Web APIs | MDN","noIndexing":false}}