{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PerformanceEventTiming","mdn_url":"/en-US/docs/Web/API/PerformanceEventTiming","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <code>PerformanceEventTiming</code> interface of the Event Timing API provides timing information for the event types listed below.</p>\n<ul>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/auxclick_event\" title=\"/en-US/docs/Web/Events/auxclick\">auxclick</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/beforeinput_event\" title=\"/en-US/docs/Web/Events/beforeinput\">beforeinput</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/click_event\" title=\"/en-US/docs/Web/Events/click\">click</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/compositionend_event\" title=\"/en-US/docs/Web/Events/compositionend\">compositionend</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/compositionstart_event\" title=\"/en-US/docs/Web/Events/compositionstart\">compositionstart</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/compositionupdate_event\" title=\"/en-US/docs/Web/Events/compositionupdate\">compositionupdate</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/contextmenu_event\" title=\"/en-US/docs/Web/Events/contextmenu\">contextmenu</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/dblclick_event\" title=\"/en-US/docs/Web/Events/dblclick\">dblclick</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/dragend_event\" title=\"/en-US/docs/Web/Events/dragend\">dragend</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/dragenter_event\" title=\"/en-US/docs/Web/Events/dragenter\">dragenter</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/dragleave_event\" title=\"/en-US/docs/Web/Events/dragleave\">dragleave</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/dragover_event\" title=\"/en-US/docs/Web/Events/dragover\">dragover</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/dragstart_event\" title=\"/en-US/docs/Web/Events/dragstart\">dragstart</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/drop_event\" title=\"/en-US/docs/Web/Events/drop\">drop</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/input_event\" title=\"/en-US/docs/Web/Events/input\">input</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/keydown_event\" title=\"/en-US/docs/Web/Events/keydown\">keydown</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/keypress_event\" title=\"/en-US/docs/Web/Events/keypress\">keypress</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/keyup_event\" title=\"/en-US/docs/Web/Events/keyup\">keyup</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/mousedown_event\" title=\"/en-US/docs/Web/Events/mousedown\">mousedown</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/mouseenter_event\" title=\"/en-US/docs/Web/Events/mouseenter\">mouseenter</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/mouseleave_event\" title=\"/en-US/docs/Web/Events/mouseleave\">mouseleave</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/mouseout_event\" title=\"/en-US/docs/Web/Events/mouseout\">mouseout</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/mouseover_event\" title=\"/en-US/docs/Web/Events/mouseover\">mouseover</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/mouseup_event\" title=\"/en-US/docs/Web/Events/mouseup\">mouseup</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/pointerover_event\" title=\"/en-US/docs/Web/Events/pointerover\">pointerover</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/pointerenter_event\" title=\"/en-US/docs/Web/Events/pointerenter\">pointerenter</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/pointerdown_event\" title=\"/en-US/docs/Web/Events/pointerdown\">pointerdown</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/pointerup_event\" title=\"/en-US/docs/Web/Events/pointerup\">pointerup</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/pointercancel_event\" title=\"/en-US/docs/Web/Events/pointercancel\">pointercancel</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/pointerout_event\" title=\"/en-US/docs/Web/Events/pointerout\">pointerout</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/pointerleave_event\" title=\"/en-US/docs/Web/Events/pointerleave\">pointerleave</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/gotpointercapture_event\" title=\"/en-US/docs/Web/Events/gotpointercapture\">gotpointercapture</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/HTMLElement/lostpointercapture_event\" title=\"/en-US/docs/Web/Events/lostpointercapture\">lostpointercapture</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/touchstart_event\" title=\"/en-US/docs/Web/Events/touchstart\">touchstart</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Document/touchend_event\" title=\"/en-US/docs/Web/Events/touchend\">touchend</a></code></li>\n  <li><code><a href=\"/en-US/docs/Web/API/Element/touchcancel_event\" title=\"/en-US/docs/Web/Events/touchcancel\">touchcancel</a></code></li>\n</ul><svg viewBox=\"-1 -1 650 42\" preserveAspectRatio=\"xMinYMin meet\">\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/PerformanceEntry\">\n    <rect x=\"0\" y=\"0\" width=\"128\" height=\"25\" fill=\"#fff\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"64\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      PerformanceEntry\n    </text>\n  </a>\n  <line x1=\"128\" y1=\"14\" x2=\"158\" y2=\"14\" stroke=\"#D4DDE4\" \"=\"\"></line>\n  <polyline points=\"128,14 138,9 138,19 128,14\" stroke=\"#D4DDE4\" fill=\"#fff\"></polyline>\n  <a style=\"text-decoration: none;\" xlink:href=\"/en-US/docs/Web/API/PerformanceEventTiming\" aria-current=\"page\">\n    <rect x=\"158\" y=\"0\" width=\"176\" height=\"25\" fill=\"#F4F7F8\" stroke=\"#D4DDE4\" stroke-width=\"2px\"></rect>\n    <text x=\"246\" y=\"16\" font-size=\"10px\" fill=\"#4D4E53\" text-anchor=\"middle\">\n      PerformanceEventTiming\n    </text>\n  </a></svg>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"performanceeventtiming.processingstart\"><strong><code><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PerformanceEventTiming.processingStart</code></a></code></strong></dt>\n  <dd>\n    <p>Returns the time at which event dispatch started.</p>\n  </dd>\n  <dt id=\"performanceeventtiming.processingend\"><strong><code><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PerformanceEventTiming.processingEnd</code></a></code></strong></dt>\n  <dd>\n    <p>Returns the time at which the event dispatch ended.</p>\n  </dd>\n  <dt id=\"performanceeventtiming.cancelable\"><strong><code><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PerformanceEventTiming.cancelable</code></a></code></strong></dt>\n  <dd>\n    <p>Returns the associated event's cancelable attribute.</p>\n  </dd>\n  <dt id=\"performanceeventtiming.target\"><strong><code><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PerformanceEventTiming.target</code></a></code></strong></dt>\n  <dd>\n    <p>Returns the associated event's last target, if it is not removed.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"performanceeventtiming.tojson\"><strong><code><a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\"><code>PerformanceEventTiming.toJSON()</code></a></code></strong></dt>\n  <dd>\n    <p>Converts the PerformanceEventTiming object to JSON.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>The following example shows how to use the API for all events:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Full duration</span>\n        <span class=\"token keyword\">const</span> inputDuration <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Input delay (before processing event)</span>\n        <span class=\"token keyword\">const</span> inputDelay <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>processingStart <span class=\"token operator\">-</span> entry<span class=\"token punctuation\">.</span>startTime<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Synchronous event processing time (between start and end dispatch).</span>\n        <span class=\"token keyword\">const</span> inputSyncProcessingTime <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>processingEnd <span class=\"token operator\">-</span> entry<span class=\"token punctuation\">.</span>processingStart<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Register observer for event.</span>\nobserver<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"event\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>We can also directly query the <a href=\"https://web.dev/fid\" class=\"external\" rel=\" noopener\">first input delay</a>. The first input delay or FID, measures the time from when a user first interacts with a page (i.e. when they click a link or tap on a button) to the time when the browser is actually able to begin processing event handlers in response to that interaction.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Keep track of whether (and when) the page was first hidden, see:</span>\n<span class=\"token comment\">// https://github.com/w3c/page-visibility/issues/29</span>\n<span class=\"token comment\">// NOTE: ideally this check would be performed in the document &lt;head&gt;</span>\n<span class=\"token comment\">// to avoid cases where the visibility state changes before this code runs.</span>\n<span class=\"token keyword\">let</span> firstHiddenTime <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>visibilityState <span class=\"token operator\">===</span> <span class=\"token string\">'hidden'</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibilitychange'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  firstHiddenTime <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>firstHiddenTime<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>timeStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">once</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Sends the passed data to an analytics endpoint. This code</span>\n<span class=\"token comment\">// uses `/analytics`; you can replace it with your own URL.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sendToAnalytics</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Use `navigator.sendBeacon()` if available, falling back to `fetch()`.</span>\n  <span class=\"token punctuation\">(</span>navigator<span class=\"token punctuation\">.</span>sendBeacon <span class=\"token operator\">&amp;&amp;</span> navigator<span class=\"token punctuation\">.</span><span class=\"token function\">sendBeacon</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/analytics'</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/analytics'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>body<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">keepalive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Use a try/catch instead of feature detecting `first-input`</span>\n<span class=\"token comment\">// support, since some browsers throw when using the new `type` option.</span>\n<span class=\"token comment\">// https://bugs.webkit.org/show_bug.cgi?id=209216</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">onFirstInputEntry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Only report FID if the page wasn't hidden prior to</span>\n    <span class=\"token comment\">// the entry being dispatched. This typically happens when a</span>\n    <span class=\"token comment\">// page is loaded in a background tab.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">&lt;</span> firstHiddenTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> fid <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span>processingStart <span class=\"token operator\">-</span> entry<span class=\"token punctuation\">.</span>startTime<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Report the FID value to an analytics endpoint.</span>\n      <span class=\"token function\">sendToAnalytics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>fid<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Create a PerformanceObserver that calls `onFirstInputEntry` for each entry.</span>\n  <span class=\"token keyword\">const</span> po <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entryList</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    entryList<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>onFirstInputEntry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Observe entries of type `first-input`, including buffered entries,</span>\n  <span class=\"token comment\">// i.e. entries that occurred before calling `observe()` below.</span>\n  po<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'first-input'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">buffered</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Do nothing if the browser doesn't support this API.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/event-timing/#sec-performance-event-timing","title":"Unknown specification"}],"query":"api.PerformanceEventTiming"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceEventTiming","dataURL":"/en-US/docs/Web/API/PerformanceEventTiming/bcd.json"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The PerformanceEventTiming interface of the Event Timing API provides timing information for the event types listed below.","popularity":0.0007,"modified":"2022-02-18T09:26:54.000Z","other_translations":[{"title":"PerformanceEventTiming","locale":"fr","native":"Français"}],"source":{"folder":"en-us/web/api/performanceeventtiming","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/performanceeventtiming/index.md","last_commit_url":"https://github.com/mdn/content/commit/93ae23dec42bba9d71d6f1ed45668d8d26847e9c","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceEventTiming","title":"PerformanceEventTiming"}],"pageTitle":"PerformanceEventTiming - Web APIs | MDN","noIndexing":false}}