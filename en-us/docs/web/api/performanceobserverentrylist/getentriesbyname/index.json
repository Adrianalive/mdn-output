{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"PerformanceObserverEntryList.getEntriesByName()","mdn_url":"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Performance_Timeline\">Performance Timeline</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntries\"><code>getEntries()</code></a></li><li><em><code>getEntriesByName()</code></em></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByType\"><code>getEntriesByType()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Performance Timeline API</summary><ol><li><a href=\"/en-US/docs/Web/API/Performance\"><code>Performance</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceEntry\"><code>PerformanceEntry</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceObserver\"><code>PerformanceObserver</code></a></li><li><a href=\"/en-US/docs/Web/API/PerformanceResourceTiming\"><code>PerformanceResourceTiming</code></a></li><li><a href=\"/en-US/docs/Web/API/performance_property\"><code>Window.performance</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>getEntriesByName()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/PerformanceObserverEntryList\"><code>PerformanceObserverEntryList</code></a> interface returns a list of explicitly\n  <em>observed</em> <a href=\"/en-US/docs/Web/API/PerformanceEntry\" title=\"performance entry\">performance entry</a>\n  objects for a given <em><a href=\"/en-US/docs/Web/API/PerformanceEntry/name\" title=\"name\"><code>name</code></a></em> and\n  <em><a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\" title=\"entry type\"><code>entry type</code></a></em>. The list's members are\n  determined by the set of <a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\" title=\"entry types\">entry types</a> specified in the call to the\n  <a href=\"/en-US/docs/Web/API/PerformanceObserver/observe\" title=\"observe()\"><code>observe()</code></a> method. The list is available in\n  the observer's callback function (as the first parameter in the callback).\n</p>\n<p>\n  This method is exposed to <a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a> and <a href=\"/en-US/docs/Web/API/Worker\"><code>Worker</code></a>\n  interfaces.\n</p>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>entries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"name\"><em><code>name</code></em></dt>\n  <dd>\n    <p>A <a href=\"/en-US/docs/Web/API/DOMString\"><code>DOMString</code></a> representing the name of the entry to retrieve.</p>\n  </dd>\n  <dt id=\"type\"><em><code>type</code></em> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>\n      A <a href=\"/en-US/docs/Web/API/DOMString\"><code>DOMString</code></a> representing the type of entry to retrieve such as\n      \"<code>mark</code>\". The valid entry types are listed in\n      <a href=\"/en-US/docs/Web/API/PerformanceEntry/entryType\"><code>PerformanceEntry.entryType</code></a>.\n    </p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>\n  A list of explicitly <em>observed</em> <a href=\"/en-US/docs/Web/API/PerformanceEntry\" title=\"performance\n  entry\">performance\n  entry</a> objects that have the specified <code>name</code> and\n  <code>type</code>. If the <code>type</code> argument is not specified, only the\n  <code>name</code> will be used to determine the entries to return. The items will be in\n  chronological order based on the entries'\n  <a href=\"/en-US/docs/Web/API/PerformanceEntry/startTime\" title=\"startTime\"><code>startTime</code></a>. If no objects meet the specified\n  criteria, an empty list is returned.\n</p>"}},{"type":"prose","value":{"id":"example","title":"Example","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">function</span> <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pe</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name: \"</span>        <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>name      <span class=\"token operator\">+</span>\n              <span class=\"token string\">\"; entryType: \"</span> <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>entryType <span class=\"token operator\">+</span>\n              <span class=\"token string\">\"; startTime: \"</span> <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>startTime <span class=\"token operator\">+</span>\n              <span class=\"token string\">\"; duration: \"</span>  <span class=\"token operator\">+</span> pe<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Create observer for all performance event types</span>\n<span class=\"token keyword\">var</span> observe_all <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> perfEntries<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Print all entries</span>\n  perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Print entries named \"Begin\" with type \"mark\"</span>\n  perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Begin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Print entries with type \"mark\"</span>\n  perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntriesByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mark\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// subscribe to all performance event types</span>\nobserve_all<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'frame'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mark'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'measure'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'navigation'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'resource'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'server'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> observe_frame <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PerformanceObserver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> obs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> perfEntries <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">getEntries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Should only have 'frame' entries</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> perfEntries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print_perf_entry</span><span class=\"token punctuation\">(</span>perfEntries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// subscribe to only the 'frame' event</span>\nobserve_frame<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">entryTypes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'frame'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/performance-timeline/#dom-performanceobserverentrylist-getentriesbyname","title":"Performance Timeline"}],"query":"api.PerformanceObserverEntryList.getEntriesByName"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.PerformanceObserverEntryList.getEntriesByName","dataURL":"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Example","id":"example"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The getEntriesByName() method of the\n  PerformanceObserverEntryList interface returns a list of explicitly\n  observed performance entry\n  objects for a given name and\n  entry type. The list's members are\n  determined by the set of entry types specified in the call to the\n  observe() method. The list is available in\n  the observer's callback function (as the first parameter in the callback).","popularity":0,"modified":"2021-09-14T18:08:09.000Z","other_translations":[{"title":"PerformanceObserverEntryList.getEntriesByName()","locale":"fr","native":"Français"}],"source":{"folder":"en-us/web/api/performanceobserverentrylist/getentriesbyname","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/performanceobserverentrylist/getentriesbyname/index.md","last_commit_url":"https://github.com/mdn/content/commit/2279e5ae6c229c707a014a22aa1ec4635a0f981f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/PerformanceObserverEntryList","title":"PerformanceObserverEntryList"},{"uri":"/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName","title":"PerformanceObserverEntryList.getEntriesByName()"}],"pageTitle":"PerformanceObserverEntryList.getEntriesByName() - Web APIs | MDN","noIndexing":false}}