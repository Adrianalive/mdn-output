{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"CustomElementRegistry.define()","mdn_url":"/en-US/docs/Web/API/CustomElementRegistry/define","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><em><code>define()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/CustomElementRegistry/get\"><code>get()</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomElementRegistry/upgrade\"><code>upgrade()</code></a></li><li><a href=\"/en-US/docs/Web/API/CustomElementRegistry/whenDefined\"><code>whenDefined()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  The <strong><code>define()</code></strong> method of the\n  <a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a> interface defines a new custom element.\n</p>\n<p>There are two types of custom elements you can create:</p>\n<ul>\n  <li>\n    <strong>Autonomous custom element</strong>: Standalone elements; they don't inherit\n    from built-in HTML elements.\n  </li>\n  <li>\n    <strong>Customized built-in element</strong>: These elements inherit from — and\n    extend — built-in HTML elements.\n  </li>\n</ul>"}},{"type":"prose","value":{"id":"syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>customElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> constructor<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt id=\"name\">name</dt>\n  <dd>\n    <p>\n      Name for the new custom element. Note that custom element names must contain a\n      hyphen.\n    </p>\n  </dd>\n  <dt id=\"constructor\">constructor</dt>\n  <dd>\n    <p>Constructor for the new custom element.</p>\n  </dd>\n  <dt id=\"options\">options <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>Object that controls how the element is defined. One option is currently supported:</p>\n    <ul>\n      <li>\n        <code>extends</code>: String specifying the name of a built-in element to\n        extend. Used to create a <em>customized built-in element</em>.\n      </li>\n    </ul>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"return_value","title":"Return value","isH3":true,"content":"<p>Void.</p>"}},{"type":"prose","value":{"id":"exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt id=\"notsupportederror\"><code>NotSupportedError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>\n      Thrown if the <a href=\"/en-US/docs/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a> already contains an\n      entry with the same name or the same constructor (or is otherwise\n      already defined), or <code>extends</code> is specified and it is a\n      <a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\" class=\"external\" rel=\" noopener\">valid custom element name</a>,\n      or <code>extends</code> is specified but the element it is trying to extend is an unknown element.\n    </p>\n  </dd>\n  <dt id=\"syntaxerror\"><code>SyntaxError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the provided name is not a <a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\" class=\"external\" rel=\" noopener\">valid custom element name</a>.</p>\n  </dd>\n  <dt id=\"typeerror\"><code>TypeError</code> <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a></dt>\n  <dd>\n    <p>Thrown if the referenced constructor is not a constructor.</p>\n  </dd>\n</dl>\n<div class=\"notecard note\" id=\"sect1\">\n  <p>\n    <strong>Note:</strong> You'll often get <code>NotSupportedError</code>s thrown that\n    seem like <code>define()</code> is failing, but instead it is likely a problem with\n    <a href=\"/en-US/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a>.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"autonomous_custom_element","title":"Autonomous custom element","isH3":true,"content":"<p>\n  The following code is taken from our <a href=\"https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component\" class=\"external\" rel=\" noopener\">popup-info-box-web-component</a>\n  example (<a href=\"https://mdn.github.io/web-components-examples/popup-info-box-web-component/\" class=\"external\" rel=\" noopener\">see it live also</a>).\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create a class for the element</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PopUpInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Always call super first in constructor</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a shadow root</span>\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create spans</span>\n    <span class=\"token keyword\">var</span> wrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wrapper'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> icon <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'icon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tabindex'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> info <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'class'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'info'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Take attribute content and put it inside the info span</span>\n    <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Insert icon</span>\n    <span class=\"token keyword\">var</span> imgUrl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      imgUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      imgUrl <span class=\"token operator\">=</span> <span class=\"token string\">'img/default.png'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> imgUrl<span class=\"token punctuation\">;</span>\n    icon<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create some CSS to apply to the shadow dom</span>\n    <span class=\"token keyword\">var</span> style <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    style<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'.wrapper {'</span> <span class=\"token operator\">+</span>\n                           <span class=\"token string\">'position: relative;'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                         <span class=\"token string\">'.info {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'font-size: 0.8rem;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'width: 200px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'display: inline-block;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'border: 1px solid black;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'padding: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'background: white;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'border-radius: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'opacity: 0;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'transition: 0.6s all;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'position: absolute;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'bottom: 20px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'left: 10px;'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'z-index: 3;'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                          <span class=\"token string\">'img {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'width: 1.2rem'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span> <span class=\"token operator\">+</span>\n\n                          <span class=\"token string\">'.icon:hover + .info, .icon:focus + .info {'</span> <span class=\"token operator\">+</span>\n                            <span class=\"token string\">'opacity: 1;'</span> <span class=\"token operator\">+</span>\n                          <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// attach the created elements to the shadow dom</span>\n\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>icon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Define the new element</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'popup-info'</span><span class=\"token punctuation\">,</span> PopUpInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>popup-info</span> <span class=\"token attr-name\">img</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>img/alt.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your card validation code (CVC) is an extra\n                                    security feature — it is the last 3 or 4\n                                    numbers on the back of your card.<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"notecard note\" id=\"sect2\">\n  <p>\n    <strong>Note:</strong> Constructors for autonomous custom elements must extend\n    <a href=\"/en-US/docs/Web/API/HTMLElement\"><code>HTMLElement</code></a>.\n  </p>\n</div>"}},{"type":"prose","value":{"id":"customized_built-in_element","title":"Customized built-in element","isH3":true,"content":"<p>\n  The following code is taken from our <a href=\"https://github.com/mdn/web-components-examples/tree/master/word-count-web-component\" class=\"external\" rel=\" noopener\">word-count-web-component</a>\n  example (<a href=\"https://mdn.github.io/web-components-examples/word-count-web-component/\" class=\"external\" rel=\" noopener\">see it live also</a>).\n</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">// Create a class for the element</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WordCount</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLParagraphElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Always call super first in constructor</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// count words in element's parent element</span>\n    <span class=\"token keyword\">var</span> wcParent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>innerText <span class=\"token operator\">||</span> node<span class=\"token punctuation\">.</span>textContent\n      <span class=\"token keyword\">return</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'Words: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a shadow root</span>\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create text node and add word count to it</span>\n    <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Append it to the shadow root</span>\n    shadow<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update count when element content changes</span>\n    <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token string\">'Words: '</span> <span class=\"token operator\">+</span> <span class=\"token function\">countWords</span><span class=\"token punctuation\">(</span>wcParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      text<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> count<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Define the new element</span>\ncustomElements<span class=\"token punctuation\">.</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string\">'word-count'</span><span class=\"token punctuation\">,</span> WordCount<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">extends</span><span class=\"token operator\">:</span> <span class=\"token string\">'p'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">is</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>word-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"creating_an_element_which_disables_the_ability_to_attach_a_shadow_root","title":"Creating an element which disables the ability to attach a shadow root","isH3":true,"content":"<p>If the class used for the element contains the static property <code>disabledFeatures</code> returning the string `shadow` this will cause <a href=\"/en-US/docs/Web/API/Element/attachShadow\"><code>Element.attachShadow()</code></a> to return a <a href=\"/en-US/docs/Web/API/DOMException\"><code>DOMException</code></a> <code>NotSupportedError</code>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name\">PopUpInfo</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HTMLElement</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">get</span> <span class=\"token function\">disabledFeatures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'shadow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> shadow <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">attachShadow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">mode</span><span class=\"token operator\">:</span> <span class=\"token string\">'open'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// this will cause an error to be thrown when the element is defined.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://html.spec.whatwg.org/multipage/custom-elements.html#dom-customelementregistry-define-dev","title":"HTML Standard"}],"query":"api.CustomElementRegistry.define"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.CustomElementRegistry.define","dataURL":"/en-US/docs/Web/API/CustomElementRegistry/define/bcd.json"}}],"toc":[{"text":"Syntax","id":"syntax"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"}],"summary":"The define() method of the\n  CustomElementRegistry interface defines a new custom element.","popularity":0.0032,"modified":"2021-10-15T17:04:17.000Z","other_translations":[{"title":"CustomElementRegistry.define()","locale":"de","native":"Deutsch"},{"title":"CustomElementRegistry.define()","locale":"es","native":"Español"},{"title":"CustomElementRegistry.define()","locale":"ja","native":"日本語"},{"title":"CustomElementRegistry.define()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"CustomElementRegistry.define()","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/web/api/customelementregistry/define","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/customelementregistry/define/index.md","last_commit_url":"https://github.com/mdn/content/commit/d3c38334923570ada25766f77212b2e808fdebc5","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/CustomElementRegistry","title":"CustomElementRegistry"},{"uri":"/en-US/docs/Web/API/CustomElementRegistry/define","title":"CustomElementRegistry.define()"}],"pageTitle":"CustomElementRegistry.define() - Web APIs | MDN","noIndexing":false}}