{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"VideoFrame","mdn_url":"/en-US/docs/Web/API/VideoFrame","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>VideoFrame</code></strong> interface of the <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\">Web Codecs API</a> represents a frame of a video.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>A <code>VideoFrame</code> object can be created or accessed in a number of ways. The <a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor\"><code>MediaStreamTrackProcessor</code></a> breaks a media track into individual <code>VideoFrame</code> objects.</p>\n<p>A <code>VideoFrame</code> is a <a href=\"/en-US/docs/Web/API/CanvasImageSource\"><code>CanvasImageSource</code></a> and has a constructor that accepts a <code>CanvasImageSource</code>. This means that a frame can be created from an image or video element.</p>\n<p>A second constructor enables the creation of a <code>VideoFrame</code> from its binary pixel representation in a <a href=\"/en-US/docs/Web/API/BufferSource\"><code>BufferSource</code></a>.</p>\n<p>Created frames may then turned into a media track, for example with the <a href=\"/en-US/docs/Web/API/MediaStreamTrackGenerator\"><code>MediaStreamTrackGenerator</code></a> interface that creates a media track from a stream of frames.</p>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"videoframe\"><a href=\"/en-US/docs/Web/API/VideoFrame/VideoFrame\" title=\"VideoFrame()\"><code>VideoFrame()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>VideoFrame</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<dl>\n  <dt id=\"videoframe.format\"><a href=\"/en-US/docs/Web/API/VideoFrame/format\"><code>VideoFrame.format</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the pixel format of the <code>VideoFrame</code>.</p>\n  </dd>\n  <dt id=\"videoframe.codedwidth\"><a href=\"/en-US/docs/Web/API/VideoFrame/codedWidth\"><code>VideoFrame.codedWidth</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the width of the <code>VideoFrame</code> in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments.</p>\n  </dd>\n  <dt id=\"videoframe.codedheight\"><a href=\"/en-US/docs/Web/API/VideoFrame/codedHeight\"><code>VideoFrame.codedHeight</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the height of the <code>VideoFrame</code> in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments.</p>\n  </dd>\n  <dt id=\"videoframe.codedrect\"><a href=\"/en-US/docs/Web/API/VideoFrame/codedRect\"><code>VideoFrame.codedRect</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a> with the width and height matching <code>codedWidth</code> and <code>codedHeight</code>.</p>\n  </dd>\n  <dt id=\"videoframe.visiblerect\"><a href=\"/en-US/docs/Web/API/VideoFrame/visibleRect\"><code>VideoFrame.visibleRect</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/DOMRectReadOnly\"><code>DOMRectReadOnly</code></a> describing the visible rectangle of pixels for this <code>VideoFrame</code>.</p>\n  </dd>\n  <dt id=\"videoframe.displaywidth\"><a href=\"/en-US/docs/Web/API/VideoFrame/displayWidth\"><code>VideoFrame.displayWidth</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the width of the <code>VideoFrame</code> when displayed after applying aspect ratio adjustments.</p>\n  </dd>\n  <dt id=\"videoframe.displayheight\"><a href=\"/en-US/docs/Web/API/VideoFrame/displayHeight\"><code>VideoFrame.displayHeight</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns the height of the <code>VideoFrame</code> when displayed after applying aspect ratio adjustments.</p>\n  </dd>\n  <dt id=\"videoframe.duration\"><a href=\"/en-US/docs/Web/API/VideoFrame/duration\"><code>VideoFrame.duration</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns an integer indicating the duration of the video in microseconds.</p>\n  </dd>\n  <dt id=\"videoframe.timestamp\"><a href=\"/en-US/docs/Web/API/VideoFrame/timestamp\"><code>VideoFrame.timestamp</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns an integer indicating the timestamp of the video in microseconds.</p>\n  </dd>\n  <dt id=\"videoframe.colorspace\"><a href=\"/en-US/docs/Web/API/VideoFrame/colorSpace\"><code>VideoFrame.colorSpace</code></a><span title=\"This value may not be changed.\" class=\"badge inline readonly\">Read only </span></dt>\n  <dd>\n    <p>Returns a <a href=\"/en-US/docs/Web/API/VideoColorSpace\"><code>VideoColorSpace</code></a> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"methods","title":"Methods","isH3":false,"content":"<dl>\n  <dt id=\"videoframe.allocationsize\"><a href=\"/en-US/docs/Web/API/VideoFrame/allocationSize\"><code>VideoFrame.allocationSize()</code></a></dt>\n  <dd>\n    <p>Returns the number of bytes required to hold the <code>VideoFrame</code> as filtered by options passed into the method.</p>\n  </dd>\n  <dt id=\"videoframe.clone\"><a href=\"/en-US/docs/Web/API/VideoFrame/clone\"><code>VideoFrame.clone()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>VideoFrame</code> object with reference to the same media resource as the original.</p>\n  </dd>\n  <dt id=\"videoframe.close\"><a href=\"/en-US/docs/Web/API/VideoFrame/close\"><code>VideoFrame.close()</code></a></dt>\n  <dd>\n    <p>Clears all states and releases the reference to the media resource.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<p>In the following example frames are returned from a <a href=\"/en-US/docs/Web/API/MediaStreamTrackProcessor\"><code>MediaStreamTrackProcessor</code></a>, then encoded. See the full example and read more about it in the article <a href=\"https://web.dev/webcodecs/\" class=\"external\" rel=\" noopener\">Video processing with WebCodecs</a>.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> frame_counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> track <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span><span class=\"token function\">getVideoTracks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> media_processor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaStreamTrackProcessor</span><span class=\"token punctuation\">(</span>track<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> reader <span class=\"token operator\">=</span> media_processor<span class=\"token punctuation\">.</span>readable<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">let</span> frame <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">.</span>encodeQueueSize <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Too many frames in flight, encoder is overwhelmed</span>\n      <span class=\"token comment\">// let's drop this frame.</span>\n      frame<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      frame_counter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> insert_keyframe <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>frame_counter <span class=\"token operator\">%</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">keyFrame</span><span class=\"token operator\">:</span> insert_keyframe <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      frame<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://w3c.github.io/webcodecs/#videoframe-interface","title":"WebCodecs"}],"query":"api.VideoFrame"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"api.VideoFrame","dataURL":"/en-US/docs/Web/API/VideoFrame/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://web.dev/webcodecs/\" class=\"external\" rel=\" noopener\">Video processing with WebCodecs</a></li>\n  <li><a href=\"https://w3c.github.io/webcodecs/samples/\" class=\"external\" rel=\" noopener\">WebCodecs examples</a></li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructor","id":"constructor"},{"text":"Properties","id":"properties"},{"text":"Methods","id":"methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The VideoFrame interface of the Web Codecs API represents a frame of a video.","popularity":0.0014,"modified":"2022-03-19T06:47:26.000Z","source":{"folder":"en-us/web/api/videoframe","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/videoframe/index.md","last_commit_url":"https://github.com/mdn/content/commit/2cd706358b9366dd00fd2d64eb0a1b776ab221f8","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/VideoFrame","title":"VideoFrame"}],"pageTitle":"VideoFrame - Web APIs | MDN","noIndexing":false}}