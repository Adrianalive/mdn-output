{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"MediaEncodingConfiguration","mdn_url":"/en-US/docs/Web/API/MediaEncodingConfiguration","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>The <strong><code>MediaEncodingConfiguration</code></strong> dictionary of the <a href=\"/en-US/docs/Web/API/Media_Capabilities_API\">Media Capabilities API</a> is used to define the type of media being tested when calling <a href=\"/en-US/docs/Web/API/MediaCapabilities/encodingInfo\"><code>MediaCapabilities.encodingInfo()</code></a> to query whether a specific media configuration is supported, smooth, and/or power efficient.</p>"}},{"type":"prose","value":{"id":"properties","title":"Properties","isH3":false,"content":"<p>A <code>MediaEncodingConfiguration</code> dictionary takes two properties:</p>\n<ul>\n  <li><code>type</code> — the type of media being tested; takes one of two values:\n    <ul>\n      <li><code>record</code> — Represents a configuration for recording of media, e.g. using <a href=\"/en-US/docs/Web/API/MediaRecorder\"><code>MediaRecorder</code></a>.</li>\n      <li><code>transmission</code> — Represents a configuration meant to be transmitted over electronic means (e.g. using <a href=\"/en-US/docs/Web/API/RTCPeerConnection\"><code>RTCPeerConnection</code></a>).</li>\n    </ul>\n  </li>\n  <li>A media configuration — a <a href=\"/en-US/docs/Web/API/VideoConfiguration\"><code>VideoConfiguration</code></a> <a href=\"/en-US/docs/Web/API/AudioConfiguration\"><code>AudioConfiguration</code></a> dictionary.</li>\n</ul>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token comment\">//Create media configuration to be tested</span>\n<span class=\"token keyword\">const</span> mediaConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">type</span> <span class=\"token operator\">:</span> <span class=\"token string\">'record'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// or 'transmission'</span>\n    <span class=\"token literal-property property\">video</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">contentType</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"video/webm;codecs=vp8\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// valid content type</span>\n        <span class=\"token literal-property property\">width</span> <span class=\"token operator\">:</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// width of the video</span>\n        <span class=\"token literal-property property\">height</span> <span class=\"token operator\">:</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// height of the video</span>\n        <span class=\"token literal-property property\">bitrate</span> <span class=\"token operator\">:</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// number of bits used to encode 1s of video</span>\n        <span class=\"token literal-property property\">framerate</span> <span class=\"token operator\">:</span> <span class=\"token number\">30</span>   <span class=\"token comment\">// number of frames making up that 1s.</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// check support and performance</span>\nnavigator<span class=\"token punctuation\">.</span>mediaCapabilities<span class=\"token punctuation\">.</span><span class=\"token function\">encodingInfo</span><span class=\"token punctuation\">(</span>mediaConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This configuration is '</span> <span class=\"token operator\">+</span>  <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>supported <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> <span class=\"token string\">'not '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'supported.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"query":"api.MediaEncodingConfiguration","specifications":[]}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"data":null,"query":"api.MediaEncodingConfiguration","browsers":null}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/MediaConfiguration\"><code>MediaConfiguration</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/MediaDecodingConfiguration\"><code>MediaDecodingConfiguration</code></a></li>\n  <li><a href=\"/en-US/docs/Web/API/MediaRecorder/isTypeSupported\"><code>MediaRecorder.isTypeSupported()</code></a></li>\n</ul>"}}],"toc":[{"text":"Properties","id":"properties"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The MediaEncodingConfiguration dictionary of the Media Capabilities API is used to define the type of media being tested when calling MediaCapabilities.encodingInfo() to query whether a specific media configuration is supported, smooth, and/or power efficient.","popularity":0,"modified":"2021-09-14T18:08:09.000Z","source":{"folder":"en-us/web/api/mediaencodingconfiguration","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/api/mediaencodingconfiguration/index.md","last_commit_url":"https://github.com/mdn/content/commit/2279e5ae6c229c707a014a22aa1ec4635a0f981f","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/MediaEncodingConfiguration","title":"MediaEncodingConfiguration"}],"pageTitle":"MediaEncodingConfiguration - Web APIs | MDN","noIndexing":false}}