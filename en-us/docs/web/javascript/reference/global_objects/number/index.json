{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Number","mdn_url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects\">Standard built-in objects</a></strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a></strong></li><li data-default-state=\"open\"><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></li></ol></li><li data-default-state=\"open\"><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\"><code>Number.prototype.toLocaleString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toSource\"><code>Number.prototype.toSource()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></li></ol></li><li><strong>Inheritance:</strong></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function\"><code>Function</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arguments\"><code>Function.arguments</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller\"><code>Function.caller</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/displayName\"><code>Function.displayName</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length\"><code>Function.length</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\"><code>Function.name</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\"><code>Function.prototype.apply()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\"><code>Function.prototype.bind()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\"><code>Function.prototype.call()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toSource\"><code>Function.prototype.toSource()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/toString\"><code>Function.prototype.toString()</code></a></li></ol></li><li><strong><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a></strong></li><li><a href=\"#\"><strong>Properties</strong></a><ol><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\"><code>Object.prototype.constructor</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\"><code>Object.prototype.__proto__</code></a></li></ol></li><li><a href=\"#\"><strong>Methods</strong></a><ol><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineGetter__\"><code>Object.prototype.__defineGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__defineSetter__\"><code>Object.prototype.__defineSetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupGetter__\"><code>Object.prototype.__lookupGetter__()</code></a></li><li><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/__lookupSetter__\"><code>Object.prototype.__lookupSetter__()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>Object.prototype.hasOwnProperty()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\"><code>Object.prototype.isPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\"><code>Object.prototype.propertyIsEnumerable()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\"><code>Object.setPrototypeOf()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a></li><li><svg class=\"icon icon-nonstandard\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-nonstandard\"></use>\n</svg><svg class=\"icon icon-deprecated\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-deprecated\"></use>\n</svg><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource\"><code>Object.prototype.toSource()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a></li><li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a></li></ol></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><strong><code>Number</code></strong> is a <a href=\"/en-US/docs/Glossary/Primitive#primitive_wrapper_objects_in_javascript\">primitive wrapper object</a> used to represent and manipulate numbers like <code>37</code> or <code>-9.25</code>.<p></p>\n<p>The <code>Number</code> constructor contains constants and methods for working with numbers. Values of other types can be converted to numbers using the <code>Number()</code> function.</p>\n<p>The JavaScript <code>Number</code> type is a <a href=\"https://en.wikipedia.org/wiki/Floating-point_arithmetic\" class=\"external\" rel=\" noopener\">double-precision 64-bit binary format IEEE 754</a> value, like <code>double</code> in Java or C#. This means it can represent fractional values, but there are some limits to what it can store. A <code>Number</code> only keeps about 17 decimal places of precision; arithmetic is subject to <a href=\"https://en.wikipedia.org/wiki/Floating-point_arithmetic#Representable_numbers,_conversion_and_rounding\" class=\"external\" rel=\" noopener\">rounding</a>. The largest value a <code>Number</code> can hold is about 1.8E308. Values higher than that are replaced with the special <code>Number</code> constant <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a>.</p>\n<p>A number literal like <code>37</code> in JavaScript code is a floating-point value, not an integer. There is no separate integer type in common everyday use. (JavaScript now has a <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> type, but it was not designed to replace Number for everyday uses. <code>37</code> is still a <code>Number</code>, not a BigInt.)</p>\n<p><code>Number</code> may also be expressed in literal forms like <code>0b101</code>, <code>0o13</code>, <code>0x0A</code>. Learn more on numeric <a href=\"/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#numeric_literals\">lexical grammar here</a>.</p>"}},{"type":"prose","value":{"id":"description","title":"Description","isH3":false,"content":"<p>When used as a function, <code>Number(value)</code> converts a string or other value to the Number type. If the value can't be converted, it returns <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a>.</p>"}},{"type":"prose","value":{"id":"literal_syntax","title":"Literal syntax","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token number\">123</span>    <span class=\"token comment\">// one-hundred twenty-three</span>\n<span class=\"token number\">123.0</span>  <span class=\"token comment\">// same</span>\n<span class=\"token number\">123</span> <span class=\"token operator\">===</span> <span class=\"token number\">123.0</span>  <span class=\"token comment\">// true</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"function_syntax","title":"Function syntax","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// returns the number 123</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">123</span>  <span class=\"token comment\">// true</span>\n\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unicorn\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// NaN</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"constructor","title":"Constructor","isH3":false,"content":"<dl>\n  <dt id=\"number\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number\"><code>Number()</code></a></dt>\n  <dd>\n    <p>Creates a new <code>Number</code> value.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_properties","title":"Static properties","isH3":false,"content":"<dl>\n  <dt id=\"number.epsilon\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\"><code>Number.EPSILON</code></a></dt>\n  <dd>\n    <p>The smallest interval between two representable numbers.</p>\n  </dd>\n  <dt id=\"number.max_safe_integer\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\"><code>Number.MAX_SAFE_INTEGER</code></a></dt>\n  <dd>\n    <p>The maximum safe integer in JavaScript (<code>2^53 - 1</code>).</p>\n  </dd>\n  <dt id=\"number.max_value\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\"><code>Number.MAX_VALUE</code></a></dt>\n  <dd>\n    <p>The largest positive representable number.</p>\n  </dd>\n  <dt id=\"number.min_safe_integer\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\"><code>Number.MIN_SAFE_INTEGER</code></a></dt>\n  <dd>\n    <p>The minimum safe integer in JavaScript (<code>-(2^53 - 1)</code>).</p>\n  </dd>\n  <dt id=\"number.min_value\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\"><code>Number.MIN_VALUE</code></a></dt>\n  <dd>\n    <p>The smallest positive representable number—that is, the positive number closest to zero (without actually being zero).</p>\n  </dd>\n  <dt id=\"number.nan\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN\"><code>Number.NaN</code></a></dt>\n  <dd>\n    <p>Special \"<strong>N</strong>ot <strong>a</strong> <strong>N</strong>umber\" value.</p>\n  </dd>\n  <dt id=\"number.negative_infinity\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\"><code>Number.NEGATIVE_INFINITY</code></a></dt>\n  <dd>\n    <p>Special value representing negative infinity. Returned on overflow.</p>\n  </dd>\n  <dt id=\"number.positive_infinity\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\"><code>Number.POSITIVE_INFINITY</code></a></dt>\n  <dd>\n    <p>Special value representing infinity. Returned on overflow.</p>\n  </dd>\n  <dt id=\"number.prototype\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\" aria-current=\"page\"><code>Number.prototype</code></a></dt>\n  <dd>\n    <p>Allows the addition of properties to the <code>Number</code> object.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"static_methods","title":"Static methods","isH3":false,"content":"<dl>\n  <dt id=\"number.isnan\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\"><code>Number.isNaN()</code></a></dt>\n  <dd>\n    <p>Determine whether the passed value is <code>NaN</code>.</p>\n  </dd>\n  <dt id=\"number.isfinite\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\"><code>Number.isFinite()</code></a></dt>\n  <dd>\n    <p>Determine whether the passed value is a finite number.</p>\n  </dd>\n  <dt id=\"number.isinteger\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\"><code>Number.isInteger()</code></a></dt>\n  <dd>\n    <p>Determine whether the passed value is an integer.</p>\n  </dd>\n  <dt id=\"number.issafeinteger\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\"><code>Number.isSafeInteger()</code></a></dt>\n  <dd>\n    <p>Determine whether the passed value is a safe integer (number between <code>-(2^53 - 1)</code> and <code>2^53 - 1</code>).</p>\n  </dd>\n  <dt id=\"number.parsefloatstring\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\"><code>Number.parseFloat(<var>string</var>)</code></a></dt>\n  <dd>\n    <p>This is the same as the global <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\"><code>parseFloat()</code></a> function.</p>\n  </dd>\n  <dt id=\"number.parseintstring_radix\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\"><code>Number.parseInt(<var>string</var>, [<var>radix</var>])</code></a></dt>\n  <dd>\n    <p>This is the same as the global <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt()</code></a> function.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"instance_methods","title":"Instance methods","isH3":false,"content":"<dl>\n  <dt id=\"number.prototype.toexponentialfractiondigits\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential\"><code>Number.prototype.toExponential(<var>fractionDigits</var>)</code></a></dt>\n  <dd>\n    <p>Returns a string representing the number in exponential notation.</p>\n  </dd>\n  <dt id=\"number.prototype.tofixeddigits\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed\"><code>Number.prototype.toFixed(<var>digits</var>)</code></a></dt>\n  <dd>\n    <p>Returns a string representing the number in fixed-point notation.</p>\n  </dd>\n  <dt id=\"number.prototype.tolocalestringlocales_options\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\"><code>Number.prototype.toLocaleString([<var>locales</var> [, <var>options</var>]])</code></a></dt>\n  <dd>\n    <p>Returns a string with a language sensitive representation of this number. Overrides the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toLocaleString\"><code>Object.prototype.toLocaleString()</code></a> method.</p>\n  </dd>\n  <dt id=\"number.prototype.toprecisionprecision\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision\"><code>Number.prototype.toPrecision(<var>precision</var>)</code></a></dt>\n  <dd>\n    <p>Returns a string representing the number to a specified precision in fixed-point or exponential notation.</p>\n  </dd>\n  <dt id=\"number.prototype.tostringradix\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\"><code>Number.prototype.toString([<var>radix</var>])</code></a></dt>\n  <dd>\n    <p>Returns a string representing the specified object in the specified <em>radix</em> (\"base\"). Overrides the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\"><code>Object.prototype.toString()</code></a> method.</p>\n  </dd>\n  <dt id=\"number.prototype.valueof\"><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/valueOf\"><code>Number.prototype.valueOf()</code></a></dt>\n  <dd>\n    <p>Returns the primitive value of the specified object. Overrides the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf\"><code>Object.prototype.valueOf()</code></a> method.</p>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"examples","title":"Examples","isH3":false,"content":""}},{"type":"prose","value":{"id":"using_the_number_object_to_assign_values_to_numeric_variables","title":"Using the Number object to assign values to numeric variables","isH3":true,"content":"<p>The following example uses the <code>Number</code> object's properties to assign values to several numeric variables:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> biggestNum     <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span>\n<span class=\"token keyword\">const</span> smallestNum    <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_VALUE</span>\n<span class=\"token keyword\">const</span> infiniteNum    <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">POSITIVE_INFINITY</span>\n<span class=\"token keyword\">const</span> negInfiniteNum <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">NEGATIVE_INFINITY</span>\n<span class=\"token keyword\">const</span> notANum        <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token number\">NaN</span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"integer_range_for_number","title":"Integer range for Number","isH3":true,"content":"<p>The following example shows the minimum and maximum integer values that can be represented as <code>Number</code> object. (More details on this are described in the ECMAScript standard, chapter <em><a href=\"https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type\" class=\"external\" rel=\" noopener\">6.1.6 The Number Type</a>.</em>)</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> biggestInt  <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span>  <span class=\"token comment\">//  (2**53 - 1) =&gt;  9007199254740991</span>\n<span class=\"token keyword\">const</span> smallestInt <span class=\"token operator\">=</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MIN_SAFE_INTEGER</span>  <span class=\"token comment\">// -(2**53 - 1) =&gt; -9007199254740991</span>\n</code></pre></div>\n<p>When parsing data that has been serialized to JSON, integer values falling outside of this range can be expected to become corrupted when JSON parser coerces them to <code>Number</code> type.</p>\n<p>A possible workaround is to use <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> instead.</p>\n<p>Larger numbers can be represented using the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a> type.</p>"}},{"type":"prose","value":{"id":"using_number_to_convert_a_date_object","title":"Using Number to convert a Date object","isH3":true,"content":"<p>The following example converts the <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\"><code>Date</code></a> object to a numerical value using <code>Number</code> as a function:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'December 17, 1995 03:24:00'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>This logs <code>819199440000</code>.</p>"}},{"type":"prose","value":{"id":"convert_numeric_strings_and_null_to_numbers","title":"Convert numeric strings and null to numbers","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 123</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">123</span> <span class=\"token comment\">// true</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12.3'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 12.3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12.00'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 12</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123e-1'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 12.3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">// 0</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0x11'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 17</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0b11'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 3</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0o11'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// 9</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100a'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">// NaN</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-Infinity'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// -Infinity</span>\n</code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-number-objects","title":"ECMAScript Language Specification"}],"query":"javascript.builtins.Number"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"browser_compatibility","isH3":false,"query":"javascript.builtins.Number","dataURL":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/bcd.json"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"https://github.com/zloirock/core-js#ecmascript-number\" class=\"external\" rel=\" noopener\">Polyfill of modern <code>Number</code> behavior (with support binary and octal literals) in <code>core-js</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\"><code>NaN</code></a></li>\n  <li><a href=\"/en-US/docs/Web/JavaScript/Reference/Operators#arithmetic_operators\">Arithmetic operators</a></li>\n  <li>The <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\"><code>Math</code></a> global object</li>\n  <li>Integers with arbitrary precision: <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\"><code>BigInt</code></a></li>\n</ul>"}}],"toc":[{"text":"Description","id":"description"},{"text":"Constructor","id":"constructor"},{"text":"Static properties","id":"static_properties"},{"text":"Static methods","id":"static_methods"},{"text":"Instance methods","id":"instance_methods"},{"text":"Examples","id":"examples"},{"text":"Specifications","id":"specifications"},{"text":"Browser compatibility","id":"browser_compatibility"},{"text":"See also","id":"see_also"}],"summary":"The Number constructor contains constants and methods for working with numbers. Values of other types can be converted to numbers using the Number() function.","popularity":0.0613,"modified":"2022-02-18T09:30:25.000Z","other_translations":[{"title":"Number","locale":"de","native":"Deutsch"},{"title":"Number","locale":"es","native":"Español"},{"title":"Number","locale":"fr","native":"Français"},{"title":"Number","locale":"ja","native":"日本語"},{"title":"Number","locale":"ko","native":"한국어"},{"title":"Number","locale":"pl","native":"Polski"},{"title":"Número","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Number","locale":"ru","native":"Русский"},{"title":"Number","locale":"zh-CN","native":"中文 (简体)"},{"title":"Number","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/javascript/reference/global_objects/number","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/web/javascript/reference/global_objects/number/index.md","last_commit_url":"https://github.com/mdn/content/commit/303a6c3b8ec6658d2956c191c50aee0a0e9e4da5","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/JavaScript","title":"JavaScript"},{"uri":"/en-US/docs/Web/JavaScript/Reference","title":"JavaScript reference"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects","title":"Standard built-in objects"},{"uri":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number","title":"Number"}],"pageTitle":"Number - JavaScript | MDN","noIndexing":false}}