{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"Mutable","mdn_url":"/en-US/docs/Glossary/Mutable","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><em>Mutable</em> is a type of variable that can be changed. In <a href=\"/en-US/docs/Glossary/JavaScript\">JavaScript</a>, only <a href=\"/en-US/docs/Glossary/Object\">objects</a> and <a href=\"/en-US/docs/Glossary/array\">arrays</a> are mutable, not <a href=\"/en-US/docs/Glossary/Primitive\">primitive values</a>.</p>\n<p>(You <em>can</em> make a variable name point to a new value, but the previous value is still held in memory. Hence the need for garbage collection.)</p>\n<p>A <strong>mutable object</strong> is an object whose state can be modified after it is created.</p>\n<p><strong>Immutables</strong> are the objects whose state cannot be changed once the object is created.</p>\n<p><strong>Strings and Numbers</strong> are <strong>Immutable</strong>. Lets understand this with an example:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">var</span> immutableString <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// In the above code, a new object with string value is created.</span>\n\nimmutableString <span class=\"token operator\">=</span> immutableString <span class=\"token operator\">+</span> <span class=\"token string\">\"World\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// We are now appending \"World\" to the existing value.</span>\n</code></pre></div>\n<p>On appending the \"immutableString\" with a string value, following events occur:</p>\n<ol>\n  <li>Existing value of \"immutableString\" is retrieved</li>\n  <li>\"World\" is appended to the existing value of \"immutableString\"</li>\n  <li>The resultant value is then allocated to a new block of memory</li>\n  <li>\"immutableString\" object now points to the newly created memory space</li>\n  <li>Previously created memory space is now available for garbage collection.</li>\n</ol>"}},{"type":"prose","value":{"id":"see_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a title=\"Immutable object\" href=\"https://en.wikipedia.org/wiki/Immutable_object\" class=\"external\" rel=\" noopener\">Immutable object</a> on Wikipedia</li>\n</ul>"}}],"toc":[{"text":"See also","id":"see_also"}],"summary":"Mutable is a type of variable that can be changed. In JavaScript, only objects and arrays are mutable, not primitive values.","popularity":0.0028,"modified":"2022-02-01T03:06:25.000Z","other_translations":[{"title":"Muable","locale":"fr","native":"Français"},{"title":"Mutable (ミュータブル)","locale":"ja","native":"日本語"},{"title":"Mutable","locale":"ko","native":"한국어"},{"title":"Mutável","locale":"pt-BR","native":"Português (do Brasil)"}],"source":{"folder":"en-us/glossary/mutable","github_url":"https://github.com/mdn/content/blob/style/old/files/en-us/glossary/mutable/index.md","last_commit_url":"https://github.com/mdn/content/commit/295e508da72ff83272a3b1ffa69a72cfeffcebde","filename":"index.md"},"parents":[{"uri":"/en-US/docs/Glossary","title":"MDN Web Docs Glossary: Definitions of Web-related terms"},{"uri":"/en-US/docs/Glossary/Mutable","title":"Mutable"}],"pageTitle":"Mutable - MDN Web Docs Glossary: Definitions of Web-related terms | MDN","noIndexing":false}}